{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2f15461d-e847-42b0-8b21-e1410d83f2a0",
   "metadata": {},
   "source": [
    "## Banking Customer Churn Prediction \n",
    "-  Churn means when customers stop using a company's product or service over a certain period of time. It's also known as customer attrition"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "562c0b52-817b-421b-997b-e9e2e0130d5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1a60b207-fbaa-47b2-83d9-391a1c49fc8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# IMPORTS\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import chi2_contingency\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler \n",
    "from imblearn.over_sampling import SMOTE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "523c9abf-1f70-421a-8615-8e0240a502c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('/Users/KSDwivedi/Downloads/BankChurn.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "baed7cc1-8c0b-42e2-9ba9-d89397102bc1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>15574012</td>\n",
       "      <td>Chu</td>\n",
       "      <td>645.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>8</td>\n",
       "      <td>113755.78</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>149756.71</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>15592531</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>822.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>50</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10062.80</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>15656148</td>\n",
       "      <td>Obinna</td>\n",
       "      <td>376.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>4</td>\n",
       "      <td>115046.74</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>119346.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>15792365</td>\n",
       "      <td>He</td>\n",
       "      <td>501.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>4</td>\n",
       "      <td>142051.07</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>74940.50</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>15592389</td>\n",
       "      <td>H?</td>\n",
       "      <td>684.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>134603.88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71725.73</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>15767821</td>\n",
       "      <td>Bearce</td>\n",
       "      <td>528.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>31</td>\n",
       "      <td>6</td>\n",
       "      <td>102016.72</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>80181.12</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>15737173</td>\n",
       "      <td>Andrews</td>\n",
       "      <td>497.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>76390.01</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>15632264</td>\n",
       "      <td>Kay</td>\n",
       "      <td>476.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>34</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26260.98</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>15691483</td>\n",
       "      <td>Chin</td>\n",
       "      <td>549.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>190857.79</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>15600882</td>\n",
       "      <td>Scott</td>\n",
       "      <td>635.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>65951.65</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0           1    15634602  Hargrave        619.0    France  Female   42   \n",
       "1           2    15647311      Hill        608.0     Spain  Female   41   \n",
       "2           3    15619304      Onio        502.0    France  Female   42   \n",
       "3           4    15701354      Boni        699.0    France  Female   39   \n",
       "4           5    15737888  Mitchell        850.0     Spain  Female   43   \n",
       "5           6    15574012       Chu        645.0     Spain    Male   44   \n",
       "6           7    15592531  Bartlett        822.0    France    Male   50   \n",
       "7           8    15656148    Obinna        376.0   Germany  Female   29   \n",
       "8           9    15792365        He        501.0    France    Male   44   \n",
       "9          10    15592389        H?        684.0    France    Male   27   \n",
       "10         11    15767821    Bearce        528.0    France    Male   31   \n",
       "11         12    15737173   Andrews        497.0     Spain    Male   24   \n",
       "12         13    15632264       Kay        476.0    France  Female   34   \n",
       "13         14    15691483      Chin        549.0    France  Female   25   \n",
       "14         15    15600882     Scott        635.0     Spain  Female   35   \n",
       "\n",
       "    Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0        2       0.00              1          1               1   \n",
       "1        1   83807.86              1          0               1   \n",
       "2        8  159660.80              3          1               0   \n",
       "3        1       0.00              2          0               0   \n",
       "4        2  125510.82              1          1               1   \n",
       "5        8  113755.78              2          1               0   \n",
       "6        7       0.00              2          1               1   \n",
       "7        4  115046.74              4          1               0   \n",
       "8        4  142051.07              2          0               1   \n",
       "9        2  134603.88              1          1               1   \n",
       "10       6  102016.72              2          0               0   \n",
       "11       3       0.00              2          1               0   \n",
       "12      10       0.00              2          1               0   \n",
       "13       5       0.00              2          0               0   \n",
       "14       7       0.00              2          1               1   \n",
       "\n",
       "    EstimatedSalary  Exited  \n",
       "0         101348.88     1.0  \n",
       "1         112542.58     0.0  \n",
       "2         113931.57     1.0  \n",
       "3          93826.63     0.0  \n",
       "4          79084.10     0.0  \n",
       "5         149756.71     1.0  \n",
       "6          10062.80     0.0  \n",
       "7         119346.88     1.0  \n",
       "8          74940.50     0.0  \n",
       "9          71725.73     0.0  \n",
       "10         80181.12     0.0  \n",
       "11         76390.01     NaN  \n",
       "12         26260.98     0.0  \n",
       "13        190857.79     0.0  \n",
       "14         65951.65     0.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "eb2a23ed-d8a3-44b7-a08e-8d854c8d23c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10000, 14)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f5b194f0-51ce-4c35-bf32-e19a104909d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10000 entries, 0 to 9999\n",
      "Data columns (total 14 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   RowNumber        10000 non-null  int64  \n",
      " 1   CustomerId       10000 non-null  int64  \n",
      " 2   Surname          10000 non-null  object \n",
      " 3   CreditScore      9998 non-null   float64\n",
      " 4   Geography        10000 non-null  object \n",
      " 5   Gender           10000 non-null  object \n",
      " 6   Age              10000 non-null  int64  \n",
      " 7   Tenure           10000 non-null  int64  \n",
      " 8   Balance          10000 non-null  float64\n",
      " 9   NumOfProducts    10000 non-null  int64  \n",
      " 10  HasCrCard        10000 non-null  int64  \n",
      " 11  IsActiveMember   10000 non-null  int64  \n",
      " 12  EstimatedSalary  10000 non-null  float64\n",
      " 13  Exited           9999 non-null   float64\n",
      "dtypes: float64(4), int64(7), object(3)\n",
      "memory usage: 1.1+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f3250683-8cc6-427f-bc87-da37a1527b92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>15737173</td>\n",
       "      <td>Andrews</td>\n",
       "      <td>497.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>76390.01</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    RowNumber  CustomerId  Surname  CreditScore Geography Gender  Age  Tenure  \\\n",
       "11         12    15737173  Andrews        497.0     Spain   Male   24       3   \n",
       "\n",
       "    Balance  NumOfProducts  HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n",
       "11      0.0              2          1               0         76390.01     NaN  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Exited'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "77f7fc6b-fc4f-402f-a2c8-cb71b714f5f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([11], dtype='int64')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Exited'].isnull()].index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c9d5afa1-c89f-4c4e-b006-c00c28faba97",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(df[df['Exited'].isnull()].index, axis=0, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f2cf9769-071e-4796-b36c-0df643dcc928",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [RowNumber, CustomerId, Surname, CreditScore, Geography, Gender, Age, Tenure, Balance, NumOfProducts, HasCrCard, IsActiveMember, EstimatedSalary, Exited]\n",
       "Index: []"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Exited'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3c913dae-03f3-4ee7-9935-b34fdd3c73be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>15574012</td>\n",
       "      <td>Chu</td>\n",
       "      <td>645.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>8</td>\n",
       "      <td>113755.78</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>149756.71</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>15592531</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>822.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>50</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10062.80</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>15656148</td>\n",
       "      <td>Obinna</td>\n",
       "      <td>376.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>4</td>\n",
       "      <td>115046.74</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>119346.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>15792365</td>\n",
       "      <td>He</td>\n",
       "      <td>501.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>4</td>\n",
       "      <td>142051.07</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>74940.50</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>15592389</td>\n",
       "      <td>H?</td>\n",
       "      <td>684.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>134603.88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71725.73</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>15767821</td>\n",
       "      <td>Bearce</td>\n",
       "      <td>528.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>31</td>\n",
       "      <td>6</td>\n",
       "      <td>102016.72</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>80181.12</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>15632264</td>\n",
       "      <td>Kay</td>\n",
       "      <td>476.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>34</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26260.98</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>15691483</td>\n",
       "      <td>Chin</td>\n",
       "      <td>549.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>190857.79</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>15600882</td>\n",
       "      <td>Scott</td>\n",
       "      <td>635.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>65951.65</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>15643966</td>\n",
       "      <td>Goforth</td>\n",
       "      <td>616.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Male</td>\n",
       "      <td>45</td>\n",
       "      <td>3</td>\n",
       "      <td>143129.41</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>64327.26</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0           1    15634602  Hargrave        619.0    France  Female   42   \n",
       "1           2    15647311      Hill        608.0     Spain  Female   41   \n",
       "2           3    15619304      Onio        502.0    France  Female   42   \n",
       "3           4    15701354      Boni        699.0    France  Female   39   \n",
       "4           5    15737888  Mitchell        850.0     Spain  Female   43   \n",
       "5           6    15574012       Chu        645.0     Spain    Male   44   \n",
       "6           7    15592531  Bartlett        822.0    France    Male   50   \n",
       "7           8    15656148    Obinna        376.0   Germany  Female   29   \n",
       "8           9    15792365        He        501.0    France    Male   44   \n",
       "9          10    15592389        H?        684.0    France    Male   27   \n",
       "10         11    15767821    Bearce        528.0    France    Male   31   \n",
       "12         13    15632264       Kay        476.0    France  Female   34   \n",
       "13         14    15691483      Chin        549.0    France  Female   25   \n",
       "14         15    15600882     Scott        635.0     Spain  Female   35   \n",
       "15         16    15643966   Goforth        616.0   Germany    Male   45   \n",
       "\n",
       "    Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0        2       0.00              1          1               1   \n",
       "1        1   83807.86              1          0               1   \n",
       "2        8  159660.80              3          1               0   \n",
       "3        1       0.00              2          0               0   \n",
       "4        2  125510.82              1          1               1   \n",
       "5        8  113755.78              2          1               0   \n",
       "6        7       0.00              2          1               1   \n",
       "7        4  115046.74              4          1               0   \n",
       "8        4  142051.07              2          0               1   \n",
       "9        2  134603.88              1          1               1   \n",
       "10       6  102016.72              2          0               0   \n",
       "12      10       0.00              2          1               0   \n",
       "13       5       0.00              2          0               0   \n",
       "14       7       0.00              2          1               1   \n",
       "15       3  143129.41              2          0               1   \n",
       "\n",
       "    EstimatedSalary  Exited  \n",
       "0         101348.88     1.0  \n",
       "1         112542.58     0.0  \n",
       "2         113931.57     1.0  \n",
       "3          93826.63     0.0  \n",
       "4          79084.10     0.0  \n",
       "5         149756.71     1.0  \n",
       "6          10062.80     0.0  \n",
       "7         119346.88     1.0  \n",
       "8          74940.50     0.0  \n",
       "9          71725.73     0.0  \n",
       "10         80181.12     0.0  \n",
       "12         26260.98     0.0  \n",
       "13        190857.79     0.0  \n",
       "14         65951.65     0.0  \n",
       "15         64327.26     0.0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c5a79f11-5552-4a15-acac-ce7fbfb96cdb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.reset_index(drop = True , inplace =True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ae91a0c6-5ca2-4bd0-9267-e84713c2e7e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>15574012</td>\n",
       "      <td>Chu</td>\n",
       "      <td>645.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>8</td>\n",
       "      <td>113755.78</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>149756.71</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>15592531</td>\n",
       "      <td>Bartlett</td>\n",
       "      <td>822.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>50</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10062.80</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>15656148</td>\n",
       "      <td>Obinna</td>\n",
       "      <td>376.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>4</td>\n",
       "      <td>115046.74</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>119346.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>15792365</td>\n",
       "      <td>He</td>\n",
       "      <td>501.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>4</td>\n",
       "      <td>142051.07</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>74940.50</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>15592389</td>\n",
       "      <td>H?</td>\n",
       "      <td>684.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>134603.88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>71725.73</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>15767821</td>\n",
       "      <td>Bearce</td>\n",
       "      <td>528.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>31</td>\n",
       "      <td>6</td>\n",
       "      <td>102016.72</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>80181.12</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>13</td>\n",
       "      <td>15632264</td>\n",
       "      <td>Kay</td>\n",
       "      <td>476.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>34</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>26260.98</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>14</td>\n",
       "      <td>15691483</td>\n",
       "      <td>Chin</td>\n",
       "      <td>549.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>190857.79</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>15</td>\n",
       "      <td>15600882</td>\n",
       "      <td>Scott</td>\n",
       "      <td>635.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>35</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>65951.65</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>16</td>\n",
       "      <td>15643966</td>\n",
       "      <td>Goforth</td>\n",
       "      <td>616.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Male</td>\n",
       "      <td>45</td>\n",
       "      <td>3</td>\n",
       "      <td>143129.41</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>64327.26</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0           1    15634602  Hargrave        619.0    France  Female   42   \n",
       "1           2    15647311      Hill        608.0     Spain  Female   41   \n",
       "2           3    15619304      Onio        502.0    France  Female   42   \n",
       "3           4    15701354      Boni        699.0    France  Female   39   \n",
       "4           5    15737888  Mitchell        850.0     Spain  Female   43   \n",
       "5           6    15574012       Chu        645.0     Spain    Male   44   \n",
       "6           7    15592531  Bartlett        822.0    France    Male   50   \n",
       "7           8    15656148    Obinna        376.0   Germany  Female   29   \n",
       "8           9    15792365        He        501.0    France    Male   44   \n",
       "9          10    15592389        H?        684.0    France    Male   27   \n",
       "10         11    15767821    Bearce        528.0    France    Male   31   \n",
       "11         13    15632264       Kay        476.0    France  Female   34   \n",
       "12         14    15691483      Chin        549.0    France  Female   25   \n",
       "13         15    15600882     Scott        635.0     Spain  Female   35   \n",
       "14         16    15643966   Goforth        616.0   Germany    Male   45   \n",
       "\n",
       "    Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0        2       0.00              1          1               1   \n",
       "1        1   83807.86              1          0               1   \n",
       "2        8  159660.80              3          1               0   \n",
       "3        1       0.00              2          0               0   \n",
       "4        2  125510.82              1          1               1   \n",
       "5        8  113755.78              2          1               0   \n",
       "6        7       0.00              2          1               1   \n",
       "7        4  115046.74              4          1               0   \n",
       "8        4  142051.07              2          0               1   \n",
       "9        2  134603.88              1          1               1   \n",
       "10       6  102016.72              2          0               0   \n",
       "11      10       0.00              2          1               0   \n",
       "12       5       0.00              2          0               0   \n",
       "13       7       0.00              2          1               1   \n",
       "14       3  143129.41              2          0               1   \n",
       "\n",
       "    EstimatedSalary  Exited  \n",
       "0         101348.88     1.0  \n",
       "1         112542.58     0.0  \n",
       "2         113931.57     1.0  \n",
       "3          93826.63     0.0  \n",
       "4          79084.10     0.0  \n",
       "5         149756.71     1.0  \n",
       "6          10062.80     0.0  \n",
       "7         119346.88     1.0  \n",
       "8          74940.50     0.0  \n",
       "9          71725.73     0.0  \n",
       "10         80181.12     0.0  \n",
       "11         26260.98     0.0  \n",
       "12        190857.79     0.0  \n",
       "13         65951.65     0.0  \n",
       "14         64327.26     0.0  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0e68dab3-9730-4895-b753-a98d69dfacff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Exited'].isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c1a67da0-a6e5-40d5-9b11-c70f18299ce6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4322</th>\n",
       "      <td>4324</td>\n",
       "      <td>15579566</td>\n",
       "      <td>Li Fonti</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>120867.18</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>18761.92</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7333</th>\n",
       "      <td>7335</td>\n",
       "      <td>15759133</td>\n",
       "      <td>Vaguine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>27308.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "4322       4324    15579566  Li Fonti          NaN     Spain  Female   43   \n",
       "7333       7335    15759133   Vaguine          NaN    France    Male   18   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "4322       3  120867.18              1          1               0   \n",
       "7333       6       0.00              2          1               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "4322         18761.92     1.0  \n",
       "7333         27308.58     0.0  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['CreditScore'].isnull()]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03192104-9213-4d51-8f49-aa4f9f049a6e",
   "metadata": {},
   "source": [
    "#### null values in creditscore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b13793b3-d5a6-47eb-bc0f-3647595e5dc2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>955</th>\n",
       "      <td>957</td>\n",
       "      <td>15631681</td>\n",
       "      <td>Jibunoh</td>\n",
       "      <td>807.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>85523.24</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1013</th>\n",
       "      <td>1015</td>\n",
       "      <td>15585961</td>\n",
       "      <td>Talbot</td>\n",
       "      <td>496.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>199505.53</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1334</th>\n",
       "      <td>1336</td>\n",
       "      <td>15576683</td>\n",
       "      <td>Yin</td>\n",
       "      <td>568.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>9</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>125870.79</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1400</th>\n",
       "      <td>1402</td>\n",
       "      <td>15619029</td>\n",
       "      <td>Bykov</td>\n",
       "      <td>620.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>20670.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2131</th>\n",
       "      <td>2133</td>\n",
       "      <td>15599722</td>\n",
       "      <td>Chia</td>\n",
       "      <td>609.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>6</td>\n",
       "      <td>86053.52</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>113276.46</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2177</th>\n",
       "      <td>2179</td>\n",
       "      <td>15609562</td>\n",
       "      <td>MacDonald</td>\n",
       "      <td>774.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>116360.07</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>17004.14</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2981</th>\n",
       "      <td>2983</td>\n",
       "      <td>15798659</td>\n",
       "      <td>Kennedy</td>\n",
       "      <td>526.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31705.19</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3000</th>\n",
       "      <td>3002</td>\n",
       "      <td>15675949</td>\n",
       "      <td>Fleming</td>\n",
       "      <td>696.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>66406.37</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3089</th>\n",
       "      <td>3091</td>\n",
       "      <td>15779581</td>\n",
       "      <td>Bottrill</td>\n",
       "      <td>734.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>55853.33</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>94811.85</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3272</th>\n",
       "      <td>3274</td>\n",
       "      <td>15646091</td>\n",
       "      <td>Frankland</td>\n",
       "      <td>560.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>95140.44</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>123181.44</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3797</th>\n",
       "      <td>3799</td>\n",
       "      <td>15621834</td>\n",
       "      <td>Game</td>\n",
       "      <td>700.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>59475.35</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4199</th>\n",
       "      <td>4201</td>\n",
       "      <td>15751943</td>\n",
       "      <td>Mai</td>\n",
       "      <td>529.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>79476.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4322</th>\n",
       "      <td>4324</td>\n",
       "      <td>15579566</td>\n",
       "      <td>Li Fonti</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>120867.18</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>18761.92</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5165</th>\n",
       "      <td>5167</td>\n",
       "      <td>15694644</td>\n",
       "      <td>Wood</td>\n",
       "      <td>455.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>6</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>81250.79</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5653</th>\n",
       "      <td>5655</td>\n",
       "      <td>15747458</td>\n",
       "      <td>Folliero</td>\n",
       "      <td>677.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>133214.88</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>95936.84</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5743</th>\n",
       "      <td>5745</td>\n",
       "      <td>15776850</td>\n",
       "      <td>Smith</td>\n",
       "      <td>749.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>124209.02</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>167179.48</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6189</th>\n",
       "      <td>6191</td>\n",
       "      <td>15613923</td>\n",
       "      <td>Reed</td>\n",
       "      <td>581.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>170172.90</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>100236.02</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6336</th>\n",
       "      <td>6338</td>\n",
       "      <td>15618243</td>\n",
       "      <td>Buckland</td>\n",
       "      <td>730.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>103960.38</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>193650.16</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6669</th>\n",
       "      <td>6671</td>\n",
       "      <td>15667932</td>\n",
       "      <td>Bellucci</td>\n",
       "      <td>758.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>55313.44</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6775</th>\n",
       "      <td>6777</td>\n",
       "      <td>15800583</td>\n",
       "      <td>Chukwuemeka</td>\n",
       "      <td>621.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>8</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>102806.60</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7428</th>\n",
       "      <td>7430</td>\n",
       "      <td>15644878</td>\n",
       "      <td>Hill</td>\n",
       "      <td>685.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>6</td>\n",
       "      <td>117302.62</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>68701.73</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7457</th>\n",
       "      <td>7459</td>\n",
       "      <td>15800049</td>\n",
       "      <td>Grigoryeva</td>\n",
       "      <td>728.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>120088.17</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8651</th>\n",
       "      <td>8653</td>\n",
       "      <td>15787204</td>\n",
       "      <td>Howe</td>\n",
       "      <td>774.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>110646.54</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>108804.28</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8689</th>\n",
       "      <td>8691</td>\n",
       "      <td>15756167</td>\n",
       "      <td>Doyne</td>\n",
       "      <td>762.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>5</td>\n",
       "      <td>134204.67</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>139971.01</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8973</th>\n",
       "      <td>8975</td>\n",
       "      <td>15697129</td>\n",
       "      <td>Ulyanova</td>\n",
       "      <td>706.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31962.77</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9300</th>\n",
       "      <td>9302</td>\n",
       "      <td>15583857</td>\n",
       "      <td>Siciliano</td>\n",
       "      <td>623.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>123536.52</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>154908.52</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9403</th>\n",
       "      <td>9405</td>\n",
       "      <td>15792232</td>\n",
       "      <td>Moss</td>\n",
       "      <td>595.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>105149.80</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9755</th>\n",
       "      <td>9757</td>\n",
       "      <td>15662698</td>\n",
       "      <td>Ko</td>\n",
       "      <td>648.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>7</td>\n",
       "      <td>81153.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>144532.85</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9877</th>\n",
       "      <td>9879</td>\n",
       "      <td>15770041</td>\n",
       "      <td>Manna</td>\n",
       "      <td>728.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>8</td>\n",
       "      <td>128412.61</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>139024.31</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId      Surname  CreditScore Geography  Gender  Age  \\\n",
       "4             5    15737888     Mitchell        850.0     Spain  Female   43   \n",
       "955         957    15631681      Jibunoh        807.0     Spain  Female   43   \n",
       "1013       1015    15585961       Talbot        496.0     Spain  Female   43   \n",
       "1334       1336    15576683          Yin        568.0     Spain  Female   43   \n",
       "1400       1402    15619029        Bykov        620.0     Spain  Female   43   \n",
       "2131       2133    15599722         Chia        609.0     Spain  Female   43   \n",
       "2177       2179    15609562    MacDonald        774.0     Spain  Female   43   \n",
       "2981       2983    15798659      Kennedy        526.0     Spain  Female   43   \n",
       "3000       3002    15675949      Fleming        696.0     Spain  Female   43   \n",
       "3089       3091    15779581     Bottrill        734.0     Spain  Female   43   \n",
       "3272       3274    15646091    Frankland        560.0     Spain  Female   43   \n",
       "3797       3799    15621834         Game        700.0     Spain  Female   43   \n",
       "4199       4201    15751943          Mai        529.0     Spain  Female   43   \n",
       "4322       4324    15579566     Li Fonti          NaN     Spain  Female   43   \n",
       "5165       5167    15694644         Wood        455.0     Spain  Female   43   \n",
       "5653       5655    15747458     Folliero        677.0     Spain  Female   43   \n",
       "5743       5745    15776850        Smith        749.0     Spain  Female   43   \n",
       "6189       6191    15613923         Reed        581.0     Spain  Female   43   \n",
       "6336       6338    15618243     Buckland        730.0     Spain  Female   43   \n",
       "6669       6671    15667932     Bellucci        758.0     Spain  Female   43   \n",
       "6775       6777    15800583  Chukwuemeka        621.0     Spain  Female   43   \n",
       "7428       7430    15644878         Hill        685.0     Spain  Female   43   \n",
       "7457       7459    15800049   Grigoryeva        728.0     Spain  Female   43   \n",
       "8651       8653    15787204         Howe        774.0     Spain  Female   43   \n",
       "8689       8691    15756167        Doyne        762.0     Spain  Female   43   \n",
       "8973       8975    15697129     Ulyanova        706.0     Spain  Female   43   \n",
       "9300       9302    15583857    Siciliano        623.0     Spain  Female   43   \n",
       "9403       9405    15792232         Moss        595.0     Spain  Female   43   \n",
       "9755       9757    15662698           Ko        648.0     Spain  Female   43   \n",
       "9877       9879    15770041        Manna        728.0     Spain  Female   43   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "4          2  125510.82              1          1               1   \n",
       "955        0       0.00              2          0               1   \n",
       "1013       3       0.00              2          0               1   \n",
       "1334       9       0.00              1          1               0   \n",
       "1400       2       0.00              2          1               0   \n",
       "2131       6   86053.52              2          1               1   \n",
       "2177       1  116360.07              1          1               0   \n",
       "2981       3       0.00              2          1               0   \n",
       "3000       4       0.00              2          1               1   \n",
       "3089       3   55853.33              2          0               1   \n",
       "3272       4   95140.44              2          1               0   \n",
       "3797       0       0.00              2          1               0   \n",
       "4199       5       0.00              2          0               0   \n",
       "4322       3  120867.18              1          1               0   \n",
       "5165       6       0.00              1          1               1   \n",
       "5653       3  133214.88              2          1               1   \n",
       "5743       1  124209.02              1          1               1   \n",
       "6189       4  170172.90              1          0               1   \n",
       "6336       1  103960.38              1          1               1   \n",
       "6669      10       0.00              2          1               1   \n",
       "6775       8       0.00              1          0               0   \n",
       "7428       6  117302.62              1          0               0   \n",
       "7457       5       0.00              1          1               1   \n",
       "8651       1  110646.54              1          0               0   \n",
       "8689       5  134204.67              1          1               1   \n",
       "8973       1       0.00              2          1               0   \n",
       "9300       4  123536.52              2          0               0   \n",
       "9403       5       0.00              2          0               0   \n",
       "9755       7   81153.82              1          1               1   \n",
       "9877       8  128412.61              1          0               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "4            79084.10     0.0  \n",
       "955          85523.24     0.0  \n",
       "1013        199505.53     0.0  \n",
       "1334        125870.79     1.0  \n",
       "1400         20670.10     0.0  \n",
       "2131        113276.46     1.0  \n",
       "2177         17004.14     0.0  \n",
       "2981         31705.19     0.0  \n",
       "3000         66406.37     0.0  \n",
       "3089         94811.85     1.0  \n",
       "3272        123181.44     1.0  \n",
       "3797         59475.35     0.0  \n",
       "4199         79476.63     0.0  \n",
       "4322         18761.92     1.0  \n",
       "5165         81250.79     0.0  \n",
       "5653         95936.84     0.0  \n",
       "5743        167179.48     0.0  \n",
       "6189        100236.02     0.0  \n",
       "6336        193650.16     0.0  \n",
       "6669         55313.44     0.0  \n",
       "6775        102806.60     0.0  \n",
       "7428         68701.73     0.0  \n",
       "7457        120088.17     0.0  \n",
       "8651        108804.28     0.0  \n",
       "8689        139971.01     0.0  \n",
       "8973         31962.77     0.0  \n",
       "9300        154908.52     0.0  \n",
       "9403        105149.80     0.0  \n",
       "9755        144532.85     1.0  \n",
       "9877        139024.31     0.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Geography'] == 'Spain') & (df['Gender'] == 'Female') & (df['Age'] == 43)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6549f27e-1ea5-4ae4-adfa-66027d33fd7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1013</th>\n",
       "      <td>1015</td>\n",
       "      <td>15585961</td>\n",
       "      <td>Talbot</td>\n",
       "      <td>496.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>199505.53</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2981</th>\n",
       "      <td>2983</td>\n",
       "      <td>15798659</td>\n",
       "      <td>Kennedy</td>\n",
       "      <td>526.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31705.19</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3089</th>\n",
       "      <td>3091</td>\n",
       "      <td>15779581</td>\n",
       "      <td>Bottrill</td>\n",
       "      <td>734.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>55853.33</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>94811.85</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4322</th>\n",
       "      <td>4324</td>\n",
       "      <td>15579566</td>\n",
       "      <td>Li Fonti</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>120867.18</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>18761.92</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5653</th>\n",
       "      <td>5655</td>\n",
       "      <td>15747458</td>\n",
       "      <td>Folliero</td>\n",
       "      <td>677.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>133214.88</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>95936.84</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "1013       1015    15585961    Talbot        496.0     Spain  Female   43   \n",
       "2981       2983    15798659   Kennedy        526.0     Spain  Female   43   \n",
       "3089       3091    15779581  Bottrill        734.0     Spain  Female   43   \n",
       "4322       4324    15579566  Li Fonti          NaN     Spain  Female   43   \n",
       "5653       5655    15747458  Folliero        677.0     Spain  Female   43   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "1013       3       0.00              2          0               1   \n",
       "2981       3       0.00              2          1               0   \n",
       "3089       3   55853.33              2          0               1   \n",
       "4322       3  120867.18              1          1               0   \n",
       "5653       3  133214.88              2          1               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "1013        199505.53     0.0  \n",
       "2981         31705.19     0.0  \n",
       "3089         94811.85     1.0  \n",
       "4322         18761.92     1.0  \n",
       "5653         95936.84     0.0  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Geography'] == 'Spain') & (df['Gender'] == 'Female') & \n",
    "   (df['Age'] == 43) & (df['Tenure'] == 3)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "07baa95f-9c97-47b1-9a10-4ce13b2e9b08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1013</th>\n",
       "      <td>1015</td>\n",
       "      <td>15585961</td>\n",
       "      <td>Talbot</td>\n",
       "      <td>496.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>199505.53</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2981</th>\n",
       "      <td>2983</td>\n",
       "      <td>15798659</td>\n",
       "      <td>Kennedy</td>\n",
       "      <td>526.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>31705.19</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3089</th>\n",
       "      <td>3091</td>\n",
       "      <td>15779581</td>\n",
       "      <td>Bottrill</td>\n",
       "      <td>734.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>55853.33</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>94811.85</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5653</th>\n",
       "      <td>5655</td>\n",
       "      <td>15747458</td>\n",
       "      <td>Folliero</td>\n",
       "      <td>677.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>133214.88</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>95936.84</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "1013       1015    15585961    Talbot        496.0     Spain  Female   43   \n",
       "2981       2983    15798659   Kennedy        526.0     Spain  Female   43   \n",
       "3089       3091    15779581  Bottrill        734.0     Spain  Female   43   \n",
       "5653       5655    15747458  Folliero        677.0     Spain  Female   43   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "1013       3       0.00              2          0               1   \n",
       "2981       3       0.00              2          1               0   \n",
       "3089       3   55853.33              2          0               1   \n",
       "5653       3  133214.88              2          1               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "1013        199505.53     0.0  \n",
       "2981         31705.19     0.0  \n",
       "3089         94811.85     1.0  \n",
       "5653         95936.84     0.0  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Geography'] == 'Spain') & (df['Gender'] == 'Female') & \n",
    "   (df['Age'] == 43) & (df['Tenure'] == 3) & (df['CreditScore'].notnull())]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "381a82bf-1982-415f-a3f2-b379d4961e53",
   "metadata": {},
   "outputs": [],
   "source": [
    "cr_avg1 = df[(df['Geography'] == 'Spain') & (df['Gender'] == 'Female') & \n",
    "   (df['Age'] == 43) & (df['Tenure'] == 3) & (df['CreditScore'].notnull())]['CreditScore'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5e4e946d-badf-4d1e-a21c-d60d56fea20c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[4322, ['CreditScore']] = cr_avg1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9cf95a7b-6b5e-4e1d-bd12-f227cf55ceb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber               4324\n",
       "CustomerId          15579566\n",
       "Surname             Li Fonti\n",
       "CreditScore           608.25\n",
       "Geography              Spain\n",
       "Gender                Female\n",
       "Age                       43\n",
       "Tenure                     3\n",
       "Balance            120867.18\n",
       "NumOfProducts              1\n",
       "HasCrCard                  1\n",
       "IsActiveMember             0\n",
       "EstimatedSalary     18761.92\n",
       "Exited                   1.0\n",
       "Name: 4322, dtype: object"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[4322, : ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f315517a-a277-42b5-b164-35c6045ddcdd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber          0\n",
       "CustomerId         0\n",
       "Surname            0\n",
       "CreditScore        1\n",
       "Geography          0\n",
       "Gender             0\n",
       "Age                0\n",
       "Tenure             0\n",
       "Balance            0\n",
       "NumOfProducts      0\n",
       "HasCrCard          0\n",
       "IsActiveMember     0\n",
       "EstimatedSalary    0\n",
       "Exited             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b8d7891b-3ebf-4657-ac57-07742137bfc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>745</th>\n",
       "      <td>747</td>\n",
       "      <td>15787619</td>\n",
       "      <td>Hsieh</td>\n",
       "      <td>844.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>160980.03</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>145936.28</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1618</th>\n",
       "      <td>1620</td>\n",
       "      <td>15770309</td>\n",
       "      <td>McDonald</td>\n",
       "      <td>656.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>151762.74</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>127014.32</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2135</th>\n",
       "      <td>2137</td>\n",
       "      <td>15621893</td>\n",
       "      <td>Bellucci</td>\n",
       "      <td>727.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>133550.67</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>46941.41</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2140</th>\n",
       "      <td>2142</td>\n",
       "      <td>15758372</td>\n",
       "      <td>Wallace</td>\n",
       "      <td>674.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>55753.12</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3329</th>\n",
       "      <td>3331</td>\n",
       "      <td>15657439</td>\n",
       "      <td>Chao</td>\n",
       "      <td>738.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>47799.15</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3685</th>\n",
       "      <td>3687</td>\n",
       "      <td>15665327</td>\n",
       "      <td>Cattaneo</td>\n",
       "      <td>706.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>176139.50</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>129654.22</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4715</th>\n",
       "      <td>4717</td>\n",
       "      <td>15805764</td>\n",
       "      <td>Hallahan</td>\n",
       "      <td>646.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>52795.15</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7333</th>\n",
       "      <td>7335</td>\n",
       "      <td>15759133</td>\n",
       "      <td>Vaguine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>6</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>27308.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9781</th>\n",
       "      <td>9783</td>\n",
       "      <td>15728829</td>\n",
       "      <td>Weigel</td>\n",
       "      <td>509.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>18</td>\n",
       "      <td>7</td>\n",
       "      <td>102983.91</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>171770.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId   Surname  CreditScore Geography Gender  Age  \\\n",
       "745         747    15787619     Hsieh        844.0    France   Male   18   \n",
       "1618       1620    15770309  McDonald        656.0    France   Male   18   \n",
       "2135       2137    15621893  Bellucci        727.0    France   Male   18   \n",
       "2140       2142    15758372   Wallace        674.0    France   Male   18   \n",
       "3329       3331    15657439      Chao        738.0    France   Male   18   \n",
       "3685       3687    15665327  Cattaneo        706.0    France   Male   18   \n",
       "4715       4717    15805764  Hallahan        646.0    France   Male   18   \n",
       "7333       7335    15759133   Vaguine          NaN    France   Male   18   \n",
       "9781       9783    15728829    Weigel        509.0    France   Male   18   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "745        2  160980.03              1          0               0   \n",
       "1618      10  151762.74              1          0               1   \n",
       "2135       4  133550.67              1          1               1   \n",
       "2140       7       0.00              2          1               1   \n",
       "3329       4       0.00              2          1               1   \n",
       "3685       2  176139.50              2          1               0   \n",
       "4715      10       0.00              2          0               1   \n",
       "7333       6       0.00              2          1               1   \n",
       "9781       7  102983.91              1          1               0   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "745         145936.28     0.0  \n",
       "1618        127014.32     0.0  \n",
       "2135         46941.41     0.0  \n",
       "2140         55753.12     1.0  \n",
       "3329         47799.15     0.0  \n",
       "3685        129654.22     0.0  \n",
       "4715         52795.15     0.0  \n",
       "7333         27308.58     0.0  \n",
       "9781        171770.58     0.0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Geography'] == 'France') & (df['Gender'] == 'Male') & (df['Age'] == 18)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "36759ea2-2ce5-43e5-bc6b-f3b2dcb14948",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "687.5"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Geography'] == 'France') & (df['Gender'] == 'Male') & (df['Age'] == 18) \n",
    "   & ((df['CreditScore'].notnull()))]['CreditScore'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ef9f0718-0689-4058-b66a-a5ac27f17378",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.loc[7333,['CreditScore']] = df[(df['Geography'] == 'France') & (df['Gender'] == 'Male') & (df['Age'] == 18) \n",
    "   & ((df['CreditScore'].notnull()))]['CreditScore'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "546c0e9d-90af-41aa-abae-2e7bb5b0c313",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber          0\n",
       "CustomerId         0\n",
       "Surname            0\n",
       "CreditScore        0\n",
       "Geography          0\n",
       "Gender             0\n",
       "Age                0\n",
       "Tenure             0\n",
       "Balance            0\n",
       "NumOfProducts      0\n",
       "HasCrCard          0\n",
       "IsActiveMember     0\n",
       "EstimatedSalary    0\n",
       "Exited             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "29f10278-963e-434f-8e6c-851b7cd40493",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Exited\n",
       "0.0    7962\n",
       "1.0    2037\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# understanding the target\n",
    "df['Exited'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "0dd6fc08-12e3-4f34-b09b-11af3e42afea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "HasCrCard\n",
       "1    7054\n",
       "0    2945\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['HasCrCard'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "98b3c618-e5d0-4a1c-81ec-69eb2a885c4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "IsActiveMember\n",
       "1    5151\n",
       "0    4848\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['IsActiveMember'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "718100e9-7c86-4ccd-b416-0c46f2181a2f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NumOfProducts\n",
       "1    5084\n",
       "2    4589\n",
       "3     266\n",
       "4      60\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['NumOfProducts'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3e162e6b-dea5-4ebc-ac9b-28acbbf6262a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>RowNumber</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>5.000999e+03</td>\n",
       "      <td>2886.608908</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2501.50</td>\n",
       "      <td>5001.00</td>\n",
       "      <td>7.500500e+03</td>\n",
       "      <td>10000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerId</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>1.569094e+07</td>\n",
       "      <td>71938.297526</td>\n",
       "      <td>15565701.00</td>\n",
       "      <td>15628526.50</td>\n",
       "      <td>15690733.00</td>\n",
       "      <td>1.575324e+07</td>\n",
       "      <td>15815690.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CreditScore</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>6.505505e+02</td>\n",
       "      <td>96.646332</td>\n",
       "      <td>350.00</td>\n",
       "      <td>584.00</td>\n",
       "      <td>652.00</td>\n",
       "      <td>7.180000e+02</td>\n",
       "      <td>850.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>3.892159e+01</td>\n",
       "      <td>10.492038</td>\n",
       "      <td>1.00</td>\n",
       "      <td>32.00</td>\n",
       "      <td>37.00</td>\n",
       "      <td>4.400000e+01</td>\n",
       "      <td>92.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tenure</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>5.013001e+00</td>\n",
       "      <td>2.892249</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>10.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Balance</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>7.683924e+04</td>\n",
       "      <td>71440.070604</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>97208.46</td>\n",
       "      <td>1.276524e+05</td>\n",
       "      <td>3555532.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumOfProducts</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>1.530153e+00</td>\n",
       "      <td>0.581664</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>4.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HasCrCard</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>7.054705e-01</td>\n",
       "      <td>0.455854</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IsActiveMember</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>5.151515e-01</td>\n",
       "      <td>0.499795</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>1.000926e+05</td>\n",
       "      <td>57512.880375</td>\n",
       "      <td>11.58</td>\n",
       "      <td>50992.93</td>\n",
       "      <td>100200.40</td>\n",
       "      <td>1.493921e+05</td>\n",
       "      <td>199992.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exited</th>\n",
       "      <td>9999.0</td>\n",
       "      <td>2.037204e-01</td>\n",
       "      <td>0.402784</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  count          mean           std          min          25%  \\\n",
       "RowNumber        9999.0  5.000999e+03   2886.608908         1.00      2501.50   \n",
       "CustomerId       9999.0  1.569094e+07  71938.297526  15565701.00  15628526.50   \n",
       "CreditScore      9999.0  6.505505e+02     96.646332       350.00       584.00   \n",
       "Age              9999.0  3.892159e+01     10.492038         1.00        32.00   \n",
       "Tenure           9999.0  5.013001e+00      2.892249         0.00         3.00   \n",
       "Balance          9999.0  7.683924e+04  71440.070604         0.00         0.00   \n",
       "NumOfProducts    9999.0  1.530153e+00      0.581664         1.00         1.00   \n",
       "HasCrCard        9999.0  7.054705e-01      0.455854         0.00         0.00   \n",
       "IsActiveMember   9999.0  5.151515e-01      0.499795         0.00         0.00   \n",
       "EstimatedSalary  9999.0  1.000926e+05  57512.880375        11.58     50992.93   \n",
       "Exited           9999.0  2.037204e-01      0.402784         0.00         0.00   \n",
       "\n",
       "                         50%           75%          max  \n",
       "RowNumber            5001.00  7.500500e+03     10000.00  \n",
       "CustomerId       15690733.00  1.575324e+07  15815690.00  \n",
       "CreditScore           652.00  7.180000e+02       850.00  \n",
       "Age                    37.00  4.400000e+01        92.00  \n",
       "Tenure                  5.00  7.000000e+00        10.00  \n",
       "Balance             97208.46  1.276524e+05   3555532.00  \n",
       "NumOfProducts           1.00  2.000000e+00         4.00  \n",
       "HasCrCard               1.00  1.000000e+00         1.00  \n",
       "IsActiveMember          1.00  1.000000e+00         1.00  \n",
       "EstimatedSalary    100200.40  1.493921e+05    199992.48  \n",
       "Exited                  0.00  0.000000e+00         1.00  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69953409-ea2c-4f19-8bd7-a0ba47943be2",
   "metadata": {},
   "source": [
    "#### Handeling Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "18e9d292-89cc-4ca7-8c49-83d018ac032c",
   "metadata": {},
   "outputs": [],
   "source": [
    "mulcols = ['Age', 'CreditScore', 'Balance', 'EstimatedSalary']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "04efba1d-4389-4001-9b1b-06e8a512ca62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "plt.boxplot(x=df['Age']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "50713632-fd82-4537-a51e-5a3f1b53a41c",
   "metadata": {},
   "outputs": [],
   "source": [
    "age = df['Age'].to_list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "9f1d6081-4519-4ed8-b04c-8084ff04e255",
   "metadata": {},
   "outputs": [],
   "source": [
    "Q1 = np.percentile(age, 25, interpolation = 'midpoint') \n",
    "Q2 = np.percentile(age, 50, interpolation = 'midpoint') \n",
    "Q3 = np.percentile(age, 75, interpolation = 'midpoint')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "0b34e23e-cd09-41ad-96cf-27f16998e80c",
   "metadata": {},
   "outputs": [],
   "source": [
    "IQR = Q3 - Q1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "f99b317f-9d7b-42d7-8661-3b56b1b310f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Old age outliers Are\n",
      "Minimum: 14.0\n",
      "Maximum: 62.0\n"
     ]
    }
   ],
   "source": [
    "print(\"Old age outliers Are\")\n",
    "print(\"Minimum:\", Q1 - 1.5 * IQR)\n",
    "print(\"Maximum:\", Q3 + 1.5 * IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "5cf65470-5406-4174-9c5e-16d372c9ef1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[66,\n",
       " 75,\n",
       " 65,\n",
       " 73,\n",
       " 65,\n",
       " 72,\n",
       " 67,\n",
       " 67,\n",
       " 79,\n",
       " 80,\n",
       " 68,\n",
       " 75,\n",
       " 66,\n",
       " 66,\n",
       " 70,\n",
       " 63,\n",
       " 72,\n",
       " 64,\n",
       " 64,\n",
       " 70,\n",
       " 67,\n",
       " 82,\n",
       " 63,\n",
       " 69,\n",
       " 65,\n",
       " 69,\n",
       " 64,\n",
       " 65,\n",
       " 74,\n",
       " 67,\n",
       " 66,\n",
       " 67,\n",
       " 63,\n",
       " 70,\n",
       " 71,\n",
       " 72,\n",
       " 67,\n",
       " 74,\n",
       " 76,\n",
       " 66,\n",
       " 63,\n",
       " 66,\n",
       " 68,\n",
       " 67,\n",
       " 63,\n",
       " 71,\n",
       " 66,\n",
       " 69,\n",
       " 73,\n",
       " 65,\n",
       " 66,\n",
       " 64,\n",
       " 69,\n",
       " 64,\n",
       " 77,\n",
       " 74,\n",
       " 65,\n",
       " 70,\n",
       " 67,\n",
       " 69,\n",
       " 67,\n",
       " 74,\n",
       " 69,\n",
       " 74,\n",
       " 74,\n",
       " 64,\n",
       " 63,\n",
       " 63,\n",
       " 70,\n",
       " 74,\n",
       " 65,\n",
       " 72,\n",
       " 77,\n",
       " 66,\n",
       " 65,\n",
       " 74,\n",
       " 88,\n",
       " 63,\n",
       " 71,\n",
       " 63,\n",
       " 64,\n",
       " 67,\n",
       " 70,\n",
       " 68,\n",
       " 72,\n",
       " 71,\n",
       " 66,\n",
       " 75,\n",
       " 67,\n",
       " 73,\n",
       " 69,\n",
       " 76,\n",
       " 63,\n",
       " 85,\n",
       " 67,\n",
       " 74,\n",
       " 76,\n",
       " 66,\n",
       " 69,\n",
       " 66,\n",
       " 72,\n",
       " 63,\n",
       " 71,\n",
       " 63,\n",
       " 74,\n",
       " 67,\n",
       " 72,\n",
       " 72,\n",
       " 66,\n",
       " 84,\n",
       " 71,\n",
       " 66,\n",
       " 63,\n",
       " 74,\n",
       " 69,\n",
       " 84,\n",
       " 67,\n",
       " 64,\n",
       " 68,\n",
       " 66,\n",
       " 77,\n",
       " 70,\n",
       " 67,\n",
       " 79,\n",
       " 67,\n",
       " 76,\n",
       " 73,\n",
       " 66,\n",
       " 67,\n",
       " 64,\n",
       " 73,\n",
       " 76,\n",
       " 72,\n",
       " 64,\n",
       " 71,\n",
       " 63,\n",
       " 70,\n",
       " 65,\n",
       " 66,\n",
       " 65,\n",
       " 80,\n",
       " 66,\n",
       " 63,\n",
       " 63,\n",
       " 63,\n",
       " 63,\n",
       " 66,\n",
       " 74,\n",
       " 69,\n",
       " 63,\n",
       " 64,\n",
       " 76,\n",
       " 75,\n",
       " 68,\n",
       " 69,\n",
       " 77,\n",
       " 64,\n",
       " 66,\n",
       " 74,\n",
       " 71,\n",
       " 67,\n",
       " 68,\n",
       " 64,\n",
       " 68,\n",
       " 70,\n",
       " 64,\n",
       " 75,\n",
       " 66,\n",
       " 1,\n",
       " 64,\n",
       " 78,\n",
       " 65,\n",
       " 74,\n",
       " 64,\n",
       " 64,\n",
       " 71,\n",
       " 77,\n",
       " 79,\n",
       " 70,\n",
       " 81,\n",
       " 64,\n",
       " 68,\n",
       " 68,\n",
       " 63,\n",
       " 79,\n",
       " 66,\n",
       " 64,\n",
       " 70,\n",
       " 69,\n",
       " 71,\n",
       " 72,\n",
       " 66,\n",
       " 68,\n",
       " 63,\n",
       " 71,\n",
       " 72,\n",
       " 72,\n",
       " 64,\n",
       " 78,\n",
       " 75,\n",
       " 65,\n",
       " 65,\n",
       " 67,\n",
       " 63,\n",
       " 68,\n",
       " 71,\n",
       " 73,\n",
       " 64,\n",
       " 66,\n",
       " 71,\n",
       " 69,\n",
       " 71,\n",
       " 66,\n",
       " 76,\n",
       " 69,\n",
       " 73,\n",
       " 64,\n",
       " 64,\n",
       " 75,\n",
       " 73,\n",
       " 71,\n",
       " 72,\n",
       " 63,\n",
       " 67,\n",
       " 68,\n",
       " 73,\n",
       " 67,\n",
       " 64,\n",
       " 63,\n",
       " 92,\n",
       " 65,\n",
       " 75,\n",
       " 67,\n",
       " 71,\n",
       " 64,\n",
       " 66,\n",
       " 64,\n",
       " 66,\n",
       " 67,\n",
       " 77,\n",
       " 92,\n",
       " 67,\n",
       " 63,\n",
       " 66,\n",
       " 66,\n",
       " 68,\n",
       " 65,\n",
       " 72,\n",
       " 71,\n",
       " 76,\n",
       " 63,\n",
       " 67,\n",
       " 67,\n",
       " 66,\n",
       " 67,\n",
       " 63,\n",
       " 65,\n",
       " 70,\n",
       " 72,\n",
       " 77,\n",
       " 74,\n",
       " 72,\n",
       " 73,\n",
       " 77,\n",
       " 67,\n",
       " 71,\n",
       " 64,\n",
       " 72,\n",
       " 81,\n",
       " 76,\n",
       " 69,\n",
       " 68,\n",
       " 74,\n",
       " 64,\n",
       " 64,\n",
       " 71,\n",
       " 68,\n",
       " 63,\n",
       " 67,\n",
       " 63,\n",
       " 64,\n",
       " 76,\n",
       " 63,\n",
       " 63,\n",
       " 68,\n",
       " 67,\n",
       " 72,\n",
       " 70,\n",
       " 81,\n",
       " 67,\n",
       " 73,\n",
       " 66,\n",
       " 68,\n",
       " 71,\n",
       " 66,\n",
       " 63,\n",
       " 75,\n",
       " 69,\n",
       " 64,\n",
       " 69,\n",
       " 70,\n",
       " 71,\n",
       " 71,\n",
       " 66,\n",
       " 70,\n",
       " 63,\n",
       " 64,\n",
       " 65,\n",
       " 63,\n",
       " 67,\n",
       " 71,\n",
       " 67,\n",
       " 65,\n",
       " 66,\n",
       " 63,\n",
       " 73,\n",
       " 66,\n",
       " 64,\n",
       " 72,\n",
       " 71,\n",
       " 69,\n",
       " 67,\n",
       " 64,\n",
       " 81,\n",
       " 73,\n",
       " 63,\n",
       " 67,\n",
       " 74,\n",
       " 83,\n",
       " 69,\n",
       " 71,\n",
       " 78,\n",
       " 63,\n",
       " 70,\n",
       " 69,\n",
       " 72,\n",
       " 70,\n",
       " 63,\n",
       " 74,\n",
       " 80,\n",
       " 69,\n",
       " 72,\n",
       " 67,\n",
       " 76,\n",
       " 71,\n",
       " 67,\n",
       " 71,\n",
       " 78,\n",
       " 63,\n",
       " 63,\n",
       " 68,\n",
       " 64,\n",
       " 70,\n",
       " 78,\n",
       " 69,\n",
       " 68,\n",
       " 64,\n",
       " 64,\n",
       " 77,\n",
       " 77]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_age = []\n",
    "for i in age:\n",
    "    if i > Q3 + 1.5 * IQR or i < Q1 - 1.5 * IQR:\n",
    "        outliers_age.append(i)\n",
    "outliers_age\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "88d91776-1bc8-4f28-8e7e-47c7aa9ae129",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>59</td>\n",
       "      <td>15623944</td>\n",
       "      <td>T'ien</td>\n",
       "      <td>511.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>66</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1643.11</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>86</td>\n",
       "      <td>15805254</td>\n",
       "      <td>Ndukaku</td>\n",
       "      <td>652.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>75</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>114675.75</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>105</td>\n",
       "      <td>15804919</td>\n",
       "      <td>Dunbabin</td>\n",
       "      <td>670.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>177655.68</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>159</td>\n",
       "      <td>15589975</td>\n",
       "      <td>Maclean</td>\n",
       "      <td>646.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>73</td>\n",
       "      <td>6</td>\n",
       "      <td>97259.25</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>104719.66</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>182</td>\n",
       "      <td>15789669</td>\n",
       "      <td>Hsia</td>\n",
       "      <td>510.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>65</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>48071.61</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9752</th>\n",
       "      <td>9754</td>\n",
       "      <td>15705174</td>\n",
       "      <td>Chiedozie</td>\n",
       "      <td>656.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Male</td>\n",
       "      <td>68</td>\n",
       "      <td>7</td>\n",
       "      <td>153545.11</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>186574.68</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9764</th>\n",
       "      <td>9766</td>\n",
       "      <td>15777067</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>445.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>64</td>\n",
       "      <td>2</td>\n",
       "      <td>136770.67</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>43678.06</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9831</th>\n",
       "      <td>9833</td>\n",
       "      <td>15814690</td>\n",
       "      <td>Chukwujekwu</td>\n",
       "      <td>595.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>64</td>\n",
       "      <td>2</td>\n",
       "      <td>105736.32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>89935.73</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9893</th>\n",
       "      <td>9895</td>\n",
       "      <td>15704795</td>\n",
       "      <td>Vagin</td>\n",
       "      <td>521.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>77</td>\n",
       "      <td>6</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>49054.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9935</th>\n",
       "      <td>9937</td>\n",
       "      <td>15653037</td>\n",
       "      <td>Parks</td>\n",
       "      <td>609.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>18708.76</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>360 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId      Surname  CreditScore Geography  Gender  Age  \\\n",
       "57           59    15623944        T'ien        511.0     Spain  Female   66   \n",
       "84           86    15805254      Ndukaku        652.0     Spain  Female   75   \n",
       "103         105    15804919     Dunbabin        670.0     Spain  Female   65   \n",
       "157         159    15589975      Maclean        646.0    France  Female   73   \n",
       "180         182    15789669         Hsia        510.0    France    Male   65   \n",
       "...         ...         ...          ...          ...       ...     ...  ...   \n",
       "9752       9754    15705174    Chiedozie        656.0   Germany    Male   68   \n",
       "9764       9766    15777067       Thomas        445.0    France    Male   64   \n",
       "9831       9833    15814690  Chukwujekwu        595.0   Germany  Female   64   \n",
       "9893       9895    15704795        Vagin        521.0    France  Female   77   \n",
       "9935       9937    15653037        Parks        609.0    France    Male   77   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "57         4       0.00              1          1               0   \n",
       "84        10       0.00              2          1               1   \n",
       "103        1       0.00              1          1               1   \n",
       "157        6   97259.25              1          0               1   \n",
       "180        2       0.00              2          1               1   \n",
       "...      ...        ...            ...        ...             ...   \n",
       "9752       7  153545.11              1          1               1   \n",
       "9764       2  136770.67              1          0               1   \n",
       "9831       2  105736.32              1          1               1   \n",
       "9893       6       0.00              2          1               1   \n",
       "9935       1       0.00              1          0               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "57            1643.11     1.0  \n",
       "84          114675.75     0.0  \n",
       "103         177655.68     1.0  \n",
       "157         104719.66     0.0  \n",
       "180          48071.61     0.0  \n",
       "...               ...     ...  \n",
       "9752        186574.68     0.0  \n",
       "9764         43678.06     0.0  \n",
       "9831         89935.73     1.0  \n",
       "9893         49054.10     0.0  \n",
       "9935         18708.76     0.0  \n",
       "\n",
       "[360 rows x 14 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Age'].isin(outliers_age)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "93236af1-f4ca-43a4-a940-cc53992a82b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[~df['Age'].isin(outliers_age)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "27f55763-2fc1-459a-8cf4-c9342ed875e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>RowNumber</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>4.997315e+03</td>\n",
       "      <td>2888.653687</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2489.5</td>\n",
       "      <td>5003.00</td>\n",
       "      <td>7.495500e+03</td>\n",
       "      <td>10000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CustomerId</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>1.569090e+07</td>\n",
       "      <td>71844.568008</td>\n",
       "      <td>15565701.00</td>\n",
       "      <td>15628369.5</td>\n",
       "      <td>15690958.00</td>\n",
       "      <td>1.575293e+07</td>\n",
       "      <td>15815690.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CreditScore</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>6.503070e+02</td>\n",
       "      <td>96.689267</td>\n",
       "      <td>350.00</td>\n",
       "      <td>583.0</td>\n",
       "      <td>652.00</td>\n",
       "      <td>7.170000e+02</td>\n",
       "      <td>850.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>3.779521e+01</td>\n",
       "      <td>8.800607</td>\n",
       "      <td>18.00</td>\n",
       "      <td>32.0</td>\n",
       "      <td>37.00</td>\n",
       "      <td>4.300000e+01</td>\n",
       "      <td>62.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tenure</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>5.015977e+00</td>\n",
       "      <td>2.888815</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.00</td>\n",
       "      <td>7.000000e+00</td>\n",
       "      <td>10.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Balance</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>7.656630e+04</td>\n",
       "      <td>62402.884993</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>97318.25</td>\n",
       "      <td>1.276611e+05</td>\n",
       "      <td>250898.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NumOfProducts</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>1.530968e+00</td>\n",
       "      <td>0.581633</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.000000e+00</td>\n",
       "      <td>4.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HasCrCard</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>7.051561e-01</td>\n",
       "      <td>0.455996</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IsActiveMember</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>5.031642e-01</td>\n",
       "      <td>0.500016</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>1.001843e+05</td>\n",
       "      <td>57510.320910</td>\n",
       "      <td>11.58</td>\n",
       "      <td>51115.1</td>\n",
       "      <td>100335.55</td>\n",
       "      <td>1.494649e+05</td>\n",
       "      <td>199992.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Exited</th>\n",
       "      <td>9639.0</td>\n",
       "      <td>2.037556e-01</td>\n",
       "      <td>0.402810</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  count          mean           std          min         25%  \\\n",
       "RowNumber        9639.0  4.997315e+03   2888.653687         1.00      2489.5   \n",
       "CustomerId       9639.0  1.569090e+07  71844.568008  15565701.00  15628369.5   \n",
       "CreditScore      9639.0  6.503070e+02     96.689267       350.00       583.0   \n",
       "Age              9639.0  3.779521e+01      8.800607        18.00        32.0   \n",
       "Tenure           9639.0  5.015977e+00      2.888815         0.00         3.0   \n",
       "Balance          9639.0  7.656630e+04  62402.884993         0.00         0.0   \n",
       "NumOfProducts    9639.0  1.530968e+00      0.581633         1.00         1.0   \n",
       "HasCrCard        9639.0  7.051561e-01      0.455996         0.00         0.0   \n",
       "IsActiveMember   9639.0  5.031642e-01      0.500016         0.00         0.0   \n",
       "EstimatedSalary  9639.0  1.001843e+05  57510.320910        11.58     51115.1   \n",
       "Exited           9639.0  2.037556e-01      0.402810         0.00         0.0   \n",
       "\n",
       "                         50%           75%          max  \n",
       "RowNumber            5003.00  7.495500e+03     10000.00  \n",
       "CustomerId       15690958.00  1.575293e+07  15815690.00  \n",
       "CreditScore           652.00  7.170000e+02       850.00  \n",
       "Age                    37.00  4.300000e+01        62.00  \n",
       "Tenure                  5.00  7.000000e+00        10.00  \n",
       "Balance             97318.25  1.276611e+05    250898.09  \n",
       "NumOfProducts           1.00  2.000000e+00         4.00  \n",
       "HasCrCard               1.00  1.000000e+00         1.00  \n",
       "IsActiveMember          1.00  1.000000e+00         1.00  \n",
       "EstimatedSalary    100335.55  1.494649e+05    199992.48  \n",
       "Exited                  0.00  0.000000e+00         1.00  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8612294a-285f-4bcc-af04-d782a46a6254",
   "metadata": {},
   "source": [
    "#### CreditScore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "e5330492-987c-4892-91c4-713ec67a1c6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,4))\n",
    "plt.boxplot(x=df['CreditScore']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "d69221d0-a498-4f33-bc3d-2681a9fadcb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CreditScore outliers: Min: 382.0 Max: 918.0\n"
     ]
    }
   ],
   "source": [
    "credit = df['CreditScore'].to_list()\n",
    "Q1 = np.percentile(credit, 25, interpolation='midpoint')\n",
    "Q3 = np.percentile(credit, 75, interpolation='midpoint')\n",
    "IQR = Q3 - Q1\n",
    "print(\"CreditScore outliers: Min:\", Q1 - 1.5 * IQR, \"Max:\", Q3 + 1.5 * IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "f5c244d9-9db9-4df1-9cb5-346346821934",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[376.0,\n",
       " 376.0,\n",
       " 363.0,\n",
       " 359.0,\n",
       " 350.0,\n",
       " 350.0,\n",
       " 358.0,\n",
       " 351.0,\n",
       " 365.0,\n",
       " 367.0,\n",
       " 350.0,\n",
       " 350.0,\n",
       " 373.0,\n",
       " 350.0]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_credit = []\n",
    "for i in credit:\n",
    "    if i > Q3 + 1.5 * IQR or i < Q1 - 1.5 * IQR:\n",
    "        outliers_credit.append(i)\n",
    "outliers_credit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "252c63c8-8764-4ee1-850d-8f5f65e8fd3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>15656148</td>\n",
       "      <td>Obinna</td>\n",
       "      <td>376.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>29</td>\n",
       "      <td>4</td>\n",
       "      <td>115046.74</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>119346.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>941</th>\n",
       "      <td>943</td>\n",
       "      <td>15804586</td>\n",
       "      <td>Lin</td>\n",
       "      <td>376.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>46</td>\n",
       "      <td>6</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>157333.69</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1192</th>\n",
       "      <td>1194</td>\n",
       "      <td>15779947</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>363.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>28</td>\n",
       "      <td>6</td>\n",
       "      <td>146098.43</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>100615.14</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1404</th>\n",
       "      <td>1406</td>\n",
       "      <td>15612494</td>\n",
       "      <td>Panicucci</td>\n",
       "      <td>359.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>44</td>\n",
       "      <td>6</td>\n",
       "      <td>128747.69</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>146955.71</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1630</th>\n",
       "      <td>1632</td>\n",
       "      <td>15685372</td>\n",
       "      <td>Azubuike</td>\n",
       "      <td>350.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>54</td>\n",
       "      <td>1</td>\n",
       "      <td>152677.48</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>191973.49</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1837</th>\n",
       "      <td>1839</td>\n",
       "      <td>15758813</td>\n",
       "      <td>Campbell</td>\n",
       "      <td>350.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Male</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>109733.20</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>123602.11</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961</th>\n",
       "      <td>1963</td>\n",
       "      <td>15692416</td>\n",
       "      <td>Aikenhead</td>\n",
       "      <td>358.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>52</td>\n",
       "      <td>8</td>\n",
       "      <td>143542.36</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>141959.11</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2472</th>\n",
       "      <td>2474</td>\n",
       "      <td>15679249</td>\n",
       "      <td>Chou</td>\n",
       "      <td>351.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Female</td>\n",
       "      <td>57</td>\n",
       "      <td>4</td>\n",
       "      <td>163146.46</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>169621.69</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2578</th>\n",
       "      <td>2580</td>\n",
       "      <td>15597896</td>\n",
       "      <td>Ozoemena</td>\n",
       "      <td>365.0</td>\n",
       "      <td>Germany</td>\n",
       "      <td>Male</td>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>127760.07</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>81537.85</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8153</th>\n",
       "      <td>8155</td>\n",
       "      <td>15791533</td>\n",
       "      <td>Ch'ien</td>\n",
       "      <td>367.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Male</td>\n",
       "      <td>42</td>\n",
       "      <td>6</td>\n",
       "      <td>93608.28</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>168816.73</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8722</th>\n",
       "      <td>8724</td>\n",
       "      <td>15803202</td>\n",
       "      <td>Onyekachi</td>\n",
       "      <td>350.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>51</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>125823.79</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8761</th>\n",
       "      <td>8763</td>\n",
       "      <td>15765173</td>\n",
       "      <td>Lin</td>\n",
       "      <td>350.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>60</td>\n",
       "      <td>3</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>113796.15</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9355</th>\n",
       "      <td>9357</td>\n",
       "      <td>15734711</td>\n",
       "      <td>Loggia</td>\n",
       "      <td>373.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Male</td>\n",
       "      <td>42</td>\n",
       "      <td>7</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>77786.37</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9623</th>\n",
       "      <td>9625</td>\n",
       "      <td>15668309</td>\n",
       "      <td>Maslow</td>\n",
       "      <td>350.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>111098.85</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>172321.21</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      RowNumber  CustomerId    Surname  CreditScore Geography  Gender  Age  \\\n",
       "7             8    15656148     Obinna        376.0   Germany  Female   29   \n",
       "941         943    15804586        Lin        376.0    France  Female   46   \n",
       "1192       1194    15779947     Thomas        363.0     Spain  Female   28   \n",
       "1404       1406    15612494  Panicucci        359.0    France  Female   44   \n",
       "1630       1632    15685372   Azubuike        350.0     Spain    Male   54   \n",
       "1837       1839    15758813   Campbell        350.0   Germany    Male   39   \n",
       "1961       1963    15692416  Aikenhead        358.0     Spain  Female   52   \n",
       "2472       2474    15679249       Chou        351.0   Germany  Female   57   \n",
       "2578       2580    15597896   Ozoemena        365.0   Germany    Male   30   \n",
       "8153       8155    15791533     Ch'ien        367.0     Spain    Male   42   \n",
       "8722       8724    15803202  Onyekachi        350.0    France    Male   51   \n",
       "8761       8763    15765173        Lin        350.0    France  Female   60   \n",
       "9355       9357    15734711     Loggia        373.0    France    Male   42   \n",
       "9623       9625    15668309     Maslow        350.0    France  Female   40   \n",
       "\n",
       "      Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "7          4  115046.74              4          1               0   \n",
       "941        6       0.00              1          1               0   \n",
       "1192       6  146098.43              3          1               0   \n",
       "1404       6  128747.69              1          1               0   \n",
       "1630       1  152677.48              1          1               1   \n",
       "1837       0  109733.20              2          0               0   \n",
       "1961       8  143542.36              3          1               0   \n",
       "2472       4  163146.46              1          1               0   \n",
       "2578       0  127760.07              1          1               0   \n",
       "8153       6   93608.28              1          1               0   \n",
       "8722      10       0.00              1          1               1   \n",
       "8761       3       0.00              1          0               0   \n",
       "9355       7       0.00              1          1               0   \n",
       "9623       0  111098.85              1          1               1   \n",
       "\n",
       "      EstimatedSalary  Exited  \n",
       "7           119346.88     1.0  \n",
       "941         157333.69     1.0  \n",
       "1192        100615.14     1.0  \n",
       "1404        146955.71     1.0  \n",
       "1630        191973.49     1.0  \n",
       "1837        123602.11     1.0  \n",
       "1961        141959.11     1.0  \n",
       "2472        169621.69     1.0  \n",
       "2578         81537.85     1.0  \n",
       "8153        168816.73     1.0  \n",
       "8722        125823.79     1.0  \n",
       "8761        113796.15     1.0  \n",
       "9355         77786.37     1.0  \n",
       "9623        172321.21     1.0  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['CreditScore'].isin(outliers_credit)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77b1d7fa-7a2e-4908-8c8c-e5fc4c25b3a2",
   "metadata": {},
   "source": [
    "##### Balance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "df797074-0c45-47a7-a4d2-4272fee32871",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,4))\n",
    "plt.boxplot(x=df['Balance']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "0b36a54a-4a1f-4d2e-b7a6-dde89fa48e8a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Balance outliers: Min: -191491.61250000002 Max: 319152.6875\n"
     ]
    }
   ],
   "source": [
    "balance = df['Balance'].to_list()\n",
    "Q1 = np.percentile(balance, 25, interpolation='midpoint')\n",
    "Q3 = np.percentile(balance, 75, interpolation='midpoint')\n",
    "IQR = Q3 - Q1\n",
    "print(\"Balance outliers: Min:\", Q1 - 1.5 * IQR, \"Max:\", Q3 + 1.5 * IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d6e61f91-4bd2-41fd-bb40-72e51d3ddd85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_balance = []\n",
    "for i in balance:\n",
    "    if i > Q3 + 1.5 * IQR or i < Q1 - 1.5 * IQR:\n",
    "        outliers_balance.append(i)\n",
    "outliers_balance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "5fd04eb9-d49a-4927-92b7-ff40344e87b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [RowNumber, CustomerId, Surname, CreditScore, Geography, Gender, Age, Tenure, Balance, NumOfProducts, HasCrCard, IsActiveMember, EstimatedSalary, Exited]\n",
       "Index: []"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Balance'].isin(outliers_balance)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c00eb0c3-fce5-47a8-bb41-ae83f8fe51a7",
   "metadata": {},
   "source": [
    "#### Esimated Salary\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "02dc855e-c7eb-4d97-920d-b1816e8bcea5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,4))\n",
    "plt.boxplot(x=df['EstimatedSalary']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "71bb8cca-7dbc-4b9f-8696-62d27f2a2e2f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EstimatedSalary outliers: Min: -96409.64499999999 Max: 296989.675\n"
     ]
    }
   ],
   "source": [
    "salary = df['EstimatedSalary'].to_list()\n",
    "Q1 = np.percentile(salary, 25, interpolation='midpoint')\n",
    "Q3 = np.percentile(salary, 75, interpolation='midpoint')\n",
    "IQR = Q3 - Q1\n",
    "print(\"EstimatedSalary outliers: Min:\", Q1 - 1.5 * IQR, \"Max:\", Q3 + 1.5 * IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "f5363f17-6bb3-45ec-bdb7-082dbe4a2b1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "outliers_salary = []\n",
    "for i in salary:\n",
    "    if i > Q3 + 1.5 * IQR or i < Q1 - 1.5 * IQR:\n",
    "        outliers_salary.append(i)\n",
    "outliers_salary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "b6dbc282-bd1a-4c21-af17-6786d0918e95",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [RowNumber, CustomerId, Surname, CreditScore, Geography, Gender, Age, Tenure, Balance, NumOfProducts, HasCrCard, IsActiveMember, EstimatedSalary, Exited]\n",
       "Index: []"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['EstimatedSalary'].isin(outliers_salary)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "90c6d363-0eb0-4876-bdb8-608b7d2d1db8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RowNumber            int64\n",
       "CustomerId           int64\n",
       "Surname             object\n",
       "CreditScore        float64\n",
       "Geography           object\n",
       "Gender              object\n",
       "Age                  int64\n",
       "Tenure               int64\n",
       "Balance            float64\n",
       "NumOfProducts        int64\n",
       "HasCrCard            int64\n",
       "IsActiveMember       int64\n",
       "EstimatedSalary    float64\n",
       "Exited             float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "c7fb45c3-19f2-4067-acac-9726e94b8ab4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['RowNumber', 'CustomerId', 'Surname', 'CreditScore', 'Geography',\n",
       "       'Gender', 'Age', 'Tenure', 'Balance', 'NumOfProducts', 'HasCrCard',\n",
       "       'IsActiveMember', 'EstimatedSalary', 'Exited'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "b5238315-3cc5-4455-aa8b-cf34b3343cf0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0          1    15634602  Hargrave        619.0    France  Female   42   \n",
       "1          2    15647311      Hill        608.0     Spain  Female   41   \n",
       "2          3    15619304      Onio        502.0    France  Female   42   \n",
       "3          4    15701354      Boni        699.0    France  Female   39   \n",
       "4          5    15737888  Mitchell        850.0     Spain  Female   43   \n",
       "\n",
       "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0       2       0.00              1          1               1   \n",
       "1       1   83807.86              1          0               1   \n",
       "2       8  159660.80              3          1               0   \n",
       "3       1       0.00              2          0               0   \n",
       "4       2  125510.82              1          1               1   \n",
       "\n",
       "   EstimatedSalary  Exited  \n",
       "0        101348.88     1.0  \n",
       "1        112542.58     0.0  \n",
       "2        113931.57     1.0  \n",
       "3         93826.63     0.0  \n",
       "4         79084.10     0.0  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb8a6650-b186-45f4-92ab-c99e041b1430",
   "metadata": {},
   "source": [
    "### Visualisations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "dc55af55-10da-4c97-9532-ab2e61f3b857",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data = df, x ='Gender')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "301c5843-2447-40b5-87ec-b90358f93f1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data = df, x ='Geography')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "4c5464b7-e98e-47ed-a673-c34f6d748316",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data = df, x = 'HasCrCard')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "d341b0db-44bc-497c-88e8-99e3819ce374",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data = df, x = 'IsActiveMember')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "439a2db0-0709-43ae-8182-c3e0181ab18c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data = df, x = 'Exited')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "197d89bc-53f7-41d1-828a-b848859aa7d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of Age\n",
    "plt.hist(df['Age'], bins=30)\n",
    "plt.title(\"Distribution of Age\")\n",
    "plt.xlabel(\"Age\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "b1f468e3-a655-4be9-a75b-3d73dfb83e51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of CreditScore\n",
    "plt.hist(df['CreditScore'], bins=30)\n",
    "plt.title(\"Distribution of CreditScore\")\n",
    "plt.xlabel(\"Credit Score\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "47466b46-2a70-46e3-afef-954b18b2e51c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of Balance\n",
    "plt.hist(df['Balance'], bins=30)\n",
    "plt.title(\"Distribution of Balance\")\n",
    "plt.xlabel(\"Balance\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "eabaeb81-ec09-4d13-9ece-ad956b9d626a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram of EstimatedSalary\n",
    "plt.hist(df['EstimatedSalary'], bins=30)\n",
    "plt.title(\"Distribution of Estimated Salary\")\n",
    "plt.xlabel(\"Salary\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80a14d99-ed51-4ce0-836b-3c4023db7382",
   "metadata": {},
   "source": [
    "## comparing the imp fields with the target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "b7de2608-53b3-4535-9518-3e34c0741686",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='Exited', y='Age', data=df)\n",
    "plt.title(\"Age vs Exited\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "f80d3d23-2435-470b-a88f-534c29907f8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='Exited', y='Balance', data=df)\n",
    "plt.title(\"Balance' vs Exited\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "b2f3259f-29ce-4c6e-8061-405fc1d6cbab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='Exited', y='EstimatedSalary', data=df)\n",
    "plt.title(\"Salary vs Exited\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "bb11b608-be25-4e60-a783-540addea3851",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=df, x='Gender', hue='Exited')\n",
    "plt.title(\"Gender-wise Churn\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "0037e2cf-95dd-48b9-a46a-da9266d3cb7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=df, x='Geography', hue='Exited')\n",
    "plt.title(\"Geography-wise Churn\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "ed8069a0-3c91-4300-9a56-c56f206f3e5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=df, x='IsActiveMember', hue='Exited')\n",
    "plt.title(\"Activity vs Churn\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "d823b030-765d-476b-99ba-00207d6828f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=df, x='HasCrCard', hue='Exited')\n",
    "plt.title(\"Credit Card Ownership vs Churn\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "7573c33e-c8c5-42bf-a362-012c7675706b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RowNumber</th>\n",
       "      <th>CustomerId</th>\n",
       "      <th>Surname</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>15634602</td>\n",
       "      <td>Hargrave</td>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>15647311</td>\n",
       "      <td>Hill</td>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>15619304</td>\n",
       "      <td>Onio</td>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>15701354</td>\n",
       "      <td>Boni</td>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>15737888</td>\n",
       "      <td>Mitchell</td>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   RowNumber  CustomerId   Surname  CreditScore Geography  Gender  Age  \\\n",
       "0          1    15634602  Hargrave        619.0    France  Female   42   \n",
       "1          2    15647311      Hill        608.0     Spain  Female   41   \n",
       "2          3    15619304      Onio        502.0    France  Female   42   \n",
       "3          4    15701354      Boni        699.0    France  Female   39   \n",
       "4          5    15737888  Mitchell        850.0     Spain  Female   43   \n",
       "\n",
       "   Tenure    Balance  NumOfProducts  HasCrCard  IsActiveMember  \\\n",
       "0       2       0.00              1          1               1   \n",
       "1       1   83807.86              1          0               1   \n",
       "2       8  159660.80              3          1               0   \n",
       "3       1       0.00              2          0               0   \n",
       "4       2  125510.82              1          1               1   \n",
       "\n",
       "   EstimatedSalary  Exited  \n",
       "0        101348.88     1.0  \n",
       "1        112542.58     0.0  \n",
       "2        113931.57     1.0  \n",
       "3         93826.63     0.0  \n",
       "4         79084.10     0.0  "
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "ca5fb5ed-98ae-49b1-913d-b4e1a6e1571f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['RowNumber', 'CustomerId', 'Surname'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "5b162fb9-1105-49ef-bc0d-de352f3581ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Tenure</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>HasCrCard</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>101348.88</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>1</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>112542.58</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>8</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113931.57</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>93826.63</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>2</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>79084.10</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CreditScore Geography  Gender  Age  Tenure    Balance  NumOfProducts  \\\n",
       "0        619.0    France  Female   42       2       0.00              1   \n",
       "1        608.0     Spain  Female   41       1   83807.86              1   \n",
       "2        502.0    France  Female   42       8  159660.80              3   \n",
       "3        699.0    France  Female   39       1       0.00              2   \n",
       "4        850.0     Spain  Female   43       2  125510.82              1   \n",
       "\n",
       "   HasCrCard  IsActiveMember  EstimatedSalary  Exited  \n",
       "0          1               1        101348.88     1.0  \n",
       "1          0               1        112542.58     0.0  \n",
       "2          1               0        113931.57     1.0  \n",
       "3          0               0         93826.63     0.0  \n",
       "4          1               1         79084.10     0.0  "
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "84c808a3-3090-4be2-853f-45e7a931af7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "font_size = 15\n",
    "plt.rcParams['axes.labelsize'] = font_size\n",
    "plt.rcParams['axes.titlesize'] = font_size + 2\n",
    "plt.rcParams['xtick.labelsize'] = font_size - 2\n",
    "plt.rcParams['ytick.labelsize'] = font_size - 2\n",
    "plt.rcParams['legend.fontsize'] = font_size - 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "8506e4c0-bfd3-4183-ac82-e04e83cef0c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "colors = ['green','pink', 'red', 'cyan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "84bba1d8-8c1a-4413-ba76-707e9a0ab26a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAegAAAGXCAYAAAB4JMMYAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABRsUlEQVR4nO3deVxUVeMG8GfYZthFQRBBAVEU0VSQWEzQMi01zVctNXezVcOlBcu1DLVX0TKt1FxelzfLhV5bzEohd0nNfUdlEZR938/vj/nNwIUBBwS5yvP9fPjInHvuuWcG8Jlz7rl3FEIIASIiIpIVg4buABEREVXGgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgKbH1rx586BQKDBu3LiG7opEdf1SKBRQKBS4efPmQ+/X/YwbNw4KhQLz5s1r6K7Uu8TEREyaNAnOzs4wNjaGQqFAcHBwvRzr5s2b2p87UXlGDd0BoorGjRuHjRs3SsqMjIxgZWWFZs2aoVOnTnjyyScxYsQIODs7P5Q+7d69G6dPn0ZwcHC9/UfdkDShGxISgiZNmjRoXxpacXExevfujYsXL8LS0hJdunSBUqlEp06dGrpr1MgwoEm2rKystP8pCiGQmZmJ+Ph47Ny5Ezt37kRoaChGjx6N5cuX6wwVW1tbeHh4oEWLFg/cl927d2vfNDxoQNdlv+rK/PnzAajfHFUV0C1atICHhwdsbW0fYs8evr179+LixYto0aIFzp07h6ZNmzZ0l6iRYkCTbHXt2hUHDhyQlAkhcPHiRaxZswYrV67Exo0bcezYMRw6dKjSf6Rvv/023n777YfYY/3ItV/3ExYWhrCwsIbuRr07f/48AKBHjx4MZ2pQPAdNjxSFQgFPT0+Eh4dj3759MDExwaVLlzBp0qSG7ho9JvLy8gAAZmZmDdwTauwY0PTICg4OxkcffQQA2LVrF/755x/J9uoWYyUnJ+ODDz5Ap06dYGFhAaVSCScnJ/j5+eHdd9/F1atXAZQt4NFMb8+fP1+7oEehUMDFxUXb5oYNG7SLiUpLS/HVV1/Bz88PTZo0gUKhwOnTp+/br/KOHDmCQYMGwc7ODiqVCp6envj0009RUFBQqa4+C43K96/ia6Th6uoqeX7lF4Tdb5HYnTt3MGPGDHTo0AFmZmba87fz589HRkaGzn2Cg4OhUCiwYcMGpKWlYcaMGXBzc4NSqYS9vT1GjRqFGzduVPs6Vefq1auYPHky2rRpA5VKhSZNmsDPzw/h4eHIz8+X1NW8Fprnt3HjRslrUZOFeyUlJdi8eTOee+452Nvbw8TEBI6OjujRowcWLVqE5OTkKvc9dOgQBg4cCFtbW8nPvbi4uFLdAwcOVPo9rKiq37eKvzP79u1D//790bx5cxgYGGD58uUA6v9nRFXjFDc90t5++23Mnz8fJSUliIiIwBNPPHHffRISEvDkk08iLi4OhoaGcHd3h5WVFZKSknDy5EkcO3YMbdq0Qdu2baFSqRAYGIirV6/i7t27cHZ2RqtWrbRt6TqPLITAsGHDsHPnTjg5OaFdu3a4detWjZ5XREQEZs6cCRMTE3To0AGpqam4ePEiPvzwQ/z000/47bffYG5uXqM2dWnVqhUCAwNx6NAhAICPjw+USqVkuz6OHDmCAQMGIDU1FUZGRvDy8kJRURHOnDmDf/75Bxs3bsRvv/0Gd3d3nfvHx8eja9euiIuLQ4cOHeDu7o4rV65g69at2LdvH/7+++8aLwiMiIjAyy+/jPz8fJiamqJjx47IysrCsWPHcOzYMWzevBm//vor7OzsJK/F7du3ERsbi+bNm6Nt27ba9lQqlV7HTU1NxeDBg/HXX38BAOzt7dGlSxfcu3dPezqmffv2GDx4cKV9N27ciIkTJ8LS0hLu7u6Ij4/X/tzPnDmD//73vzV6DfS1YsUK7QJBzd9DRfXxM6L7EEQyM3bsWAFABAUF6VW/S5cuAoB47rnnJOVz584VAMTYsWMl5SEhIQKA6NWrl0hMTJRsy83NFdu3bxcHDx7U2ae5c+dW2Y/169cLAMLQ0FA0adJE/PLLL9ptxcXFoqCgoNp+CSEEAAFAGBsbi7Fjx4qsrCzttv3794umTZsKAOKNN96Q7BcTE6Pd93790/W6avaNiYmpcv+qXoOUlBTh4OAgAIhnn31W8ppevnxZeHl5CQCic+fOori4WLJvUFCQ9vk+/fTTIi4uTrvt+vXrwsPDQwAQ48aNq7Jfuly9elWYmZkJAGL06NEiIyNDu+348eOiZcuWAoB4/vnnK+1b3c9HH08//bQAIFq0aCH27t0r2ZadnS3Wrl0roqOjtWXlf3ZKpVJ89tlnoqioSLv9P//5j1AoFAKAOHDggKS9/fv3CwCidevWVfanqudT/rjGxsZiyZIlkuPm5uYKIervZ0T3xylueuS1bt0aAJCUlKRX/YsXLwIA3nnnHdjb20u2mZqaYtiwYQgMDKx1f0pKSvDll1+iX79+2jJDQ0OYmJjo3YaLiwvWrVsHCwsLbVlwcDDCw8MBAGvWrMGdO3dq3ce69NVXXyExMRE2Njb4/vvvJa9pu3bt8P3338PAwABnzpzBjh07dLZhaWmJ7du3o2XLltoyNzc3fPrppwCAH3/8sUZ9WrJkCXJzc9GuXTusX79eMiLs3r07vv32WwDAzz//jOPHj9eo7er89NNP+OOPP2BsbIy9e/fi2WeflWw3NzfHxIkT4e3trXP/ESNGYObMmTAyKpvcfOWVVzBgwAAANX8d9DVu3Di8++67kuOamppK6tT1z4jujwFNjzxNiGVmZupVXxPo27dv13k+90FZWlpi+PDhD9TGO++8A0NDw0rlI0eOhL29PYqLi7F3794HOkZd2bNnDwBg8uTJOqdG27dvjxdeeAGAOsB0GTVqlM4V0/7+/gDU08apqak17tO0adN0vo7PPvssunTpUm2fauP7778HAAwaNKhW101PmTJFZ7nmddCsjahr+iyyrOufEd0fA5oeeVlZWQAAa2trveq/8847UKlU2Lp1K1q0aIGXXnoJy5cvx4kTJ1BaWvrA/fHw8JCMRGrDy8tLZ7mRkRHat28PALhw4cIDHaOuXLp0CQCqDaTOnTtL6lbk4eGhs7z8aDw7O1uv/mRmZmpnFx6kT7Vx9uxZAKj1DMz9Xgd9X4Oa6tix433r1OXPiPTDgKZHnmZ1bcXp6qp4enri2LFjGDp0KAoKCrB9+3ZMmzYNvr6+cHR0xKJFi3SumNVXXSzecnBwuO82zRuThqaZuaiuz5rFdFXNclT1mhkYlP0Xpe+bp/LHeJA+1Yamrdreje1+r0NdvIGsyXH1qVObnxHphwFNj7SUlBTtjSUCAgL03q9z5874/vvvkZ6ejmPHjmHZsmV4+umnkZSUhNDQUMyaNau+uqyX6s6na7ZZWlpqy8pfKiWE0LlfYWFhHfVOSjOtnZiYWGUdzYhW1xR4ffWnIfqkaSs9Pb3O2qyO5ude1c8cqL+fO9U/BjQ90latWoWSkhIoFAoMGjSoxvsbGxvD19cX06ZNw++//65dhLVq1SrJaOBhf5DBuXPndJaXlJRop2Q9PT215eVHN1WF+7Vr1+qwh2U0U+6a6V1dNNs6dOhQL30oz8rKSjs6fth90kybay5bq2+an/vdu3errFNfP3eqfwxoemQdOHAAn3zyCQBg6NChVZ63rQnNTTxycnIkoyDNXaU0d5mqbytWrNA5Xbht2zYkJibCyMhIskLY1tZWu4BHVzhkZ2dj69atVR7vQZ6fZoXxN998o3O6+MqVK9oVvv37969x+7Wh6VN4eDhKSkoqbf/9999x6tSpOu/T0KFDAaivwa7qTVZdcnd3h0KhQH5+Pv7+++9K2+Pj4+t0ERw9XAxoeuRcvHgR06ZNQ58+fVBYWAhPT0988803eu8/efJkbNy4EWlpaZLytLQ0LFy4EADQpk0byYpVzQ02Dh48iKKiojp4FtWLiYnBq6++ipycHG1ZVFQUpk2bBgCYOHEiHB0dJfsMHDgQAPDhhx9K7uwUHx+PwYMH4969e1UeT/P8/vzzzxr39fXXX4eDgwPS0tIwfPhwyQj+6tWrGDZsGEpKSvDEE09gyJAhNW6/Nt577z2YmZnhypUrGD9+vOSNQ3R0NCZMmABAHc7du3evs+P2798fvXv3RlFREZ577jn8/vvvku05OTn49ttvdYZpbTRp0gQ9e/YEAEydOlXyM758+TL69+//QOspqGExoEm2Tp06hR49eqBHjx4IDAxE586d0bRpU3h6emL58uUoLS3FhAkTcPjw4Rotyjl+/DjGjRuHZs2awc3NDU8++SS8vLzQokUL/PDDDzA3N8fatWsl+wwdOhRmZmY4fPgwnJycEBgYiODgYLz88st1/KzVPvvsM2zatAn29vbo3r073N3dERQUhOTkZPj5+eGzzz6rtM+CBQtgZ2eHy5cvw8PDAx07dkTnzp3RunVrXL9+HXPnzq3yeGPGjAGgvjObp6cngoKCEBwcjA0bNty3r02bNsXOnTthY2ODvXv3wtnZGV27dkWnTp3Qvn17nDlzBi4uLvjhhx90XvJUH9zd3bFlyxaoVCr85z//gYODA3x8fODh4YHu3bsjNjYWXbt2xfr16+v82N999x38/f0RFxeHPn36oEWLFvD19YWbmxuaNGmCiRMnIjY2ts6Ot3TpUu3vprOzM5544gl06NABHTp0gKGh4SP5wSykxoAm2crMzMShQ4dw6NAhHD9+HHFxcWjWrBlefPFFLF68GLdu3cK6dev0vrxKY/ny5Zg5cyZ8fX1RUFCA06dPIyYmBm5ubpgyZQrOnTtX6SMlnZ2d8dtvv+G5555DaWkpjh49isjISBw9erQOn3GZQYMGISoqCr1790ZMTAzi4uLQvn17fPzxx9i/f79kgZhGq1atcPToUe31qlevXkVmZibefvttnDx5stKIu7xp06bh3//+N5544gncunULUVFRiIyM1Pv+0/7+/jh37hymTZsGNzc3XLp0CTdu3ICXlxfmzp2L06dPV3mbz/oyePBg/PPPP3j11Vdhb2+Ps2fP4s6dO/D19cXSpUtx+PBh7W0+65KtrS2ioqKwbt067Wj69OnTKCgogJ+fH5YsWYKnnnqqzo7n7e2NQ4cOYdCgQTAzM8Ply5dRWlqK2bNn49ChQzp/V+jRoBDVLf8jIiKiBsERNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhh7sM/FIb6WlpUhISIClpeVDv68zERHJhxACWVlZcHR0lHwaWEUM6IckISEBzs7ODd0NIiKSidjYWDg5OVW5nQH9kGju5hMbG/tQPnKPiIjkKTMzE87Ozve9yxsD+iHRTGtbWVkxoImI6L6nO7lIjIiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyZBRQ3eAHg/jdo/Dxn826lW3tXVr3Ay5qX0shMB/z/0X60+vx8k7J5FZkAk7czv0aNUD0/ymwc/J74H6lpKbgi+Of4E9V/bgetp15BXlwdbMFq42rghqHYQpvlNgb2GvrX8s7hj239yPqFtRiEmPQVJ2ErILs2FrZgtvR2+M7zIeQzoMqXScnMIczNk/Bz9c/AF3su6gmVkzDGg7AGHPhMHWzLZS/fWn1mPCjxPQrlk7nH3jLEwMTR7oeRLR40UhhBAN3YnGIDMzE9bW1sjIyICVlVVDd6fO1Tagi0qKMPyH4dh9abfOugoosKTPEswMmFmrfv1+43cM+34Y0vPTq6yzf+x+BLsEax9bfGqBnKKcatt92etlbH5xMwwNDAGo32T02tgLkbciAQCOlo5IzE5EqSiFp50n/p78N1RGKu3+GfkZaLeyHe7m3MUvo35BP/d+tXp+RPTo0TcPZDvFnZ2djY8//hheXl6wsLCAnZ0dAgMDsXnz5kp1k5KSMGHCBNjb20OlUqFz585Ys2ZNlW1v27YN3t7eMDU1ha2tLUaMGIFbt27prFvTthur7o7d8a8O/9L55dvSV1LX29Fb+/2sP2ZJwrmFRQv0bdMXdmZ2AAABgXf3vYtfrv5S4z5FJ0Sj/9b+knB2aeKCvm36okerHmhu3rza/Y0MjPBkyyfxnPtzcLR0lGz777n/4vNjn2sf/xnzpzacv3juC8RPj0fEyxEAgAv3LmDb2W2S/efsn4O7OXcxyGMQw5mIdBMyVFJSIgICAoSBgYGYMGGC+Prrr8WyZctE165dBQAxe/Zsbd20tDTh7u4uTE1NRWhoqPjmm29E//79BQAxb968Sm1/8cUXAoAIDAwUq1evFh9//LFo1qyZcHR0FPHx8ZK6NW27OhkZGQKAyMjIqN2L8ggbvXO0wDxov/bH7BdCCJGZnymUHyu15e6fu4uMfPXrcy/nnmj+WXPtto5fdqzRMUtLS4XXKi/t/qpPVOK7c99J6pSUlogDMQfE7fTbknKHfzuIefvniXs597RleUV5Yuj2oZLn0WlVJ+32xQcXa8s1z0EIIWwW2QjMg3hzz5vasjOJZ4TRAiOh+kQlbqTeqNHzIqJHn755IMuAPnz4sAAgQkJCJOW5ubnCwcFB2Nvba8s++OADAUDs2LFDUnfgwIHC2NhY3LhR9h9gcnKysLCwEN26dRNFRUXa8hMnTgiFQiEmTpwoaaMmbd9PYw3ou9l3JSHstcpLu+23a79JAu/DPz6U7Dv5x8mS7ScTTup93L3X9kr2XfTXIr33vZN1R2f59dTrkjZVn6i022oS0EHrgwTmQczdP1fvPhHR40PfPJDlFHdGRgYAwNFROq1oamoKGxsbmJmZacu2bNkCV1dXDBkiXbQzffp0FBUV4bvvvtOWRUREIDs7G1OnToWRUdn6OB8fH/Ts2RPbt29HYWFhrdom3dacXIOCkgLt4ym+U7Tf38u9J6lro7KRPjaVPj4ad1Tv41acEh/SYQi+iv4K4yPGY8yuMVgQuQCXki/p3NfBwkGvcitl2bkjH0cf7feb/tkEANhzZQ/S8tMk27ee3YrIW5FwaeKC9wPf1/v5EFHjI8tV3L6+vrCyssKSJUvg4uICPz8/ZGdn45tvvsHly5exfv16AEBiYiJiY2MxcuTISm34+/tDoVDg+PHj2jLN9wEBAZXqBwQEIDIyEpcuXULnzp1r3HZFBQUFKCgoC6bMzEz9X4DHRElpCb6K/kr7uImqCV7p/Ir2sbXSWlL/Wuq1ah9fT7uu97FPJZ7Sfm9kYIReG3shPiteUmd+5Hx89NRHmN9rvl5t7r22V/I4qHWQ9vteLr0Q7BKMAzcPYMovUxB2MAyJ2YkAAE87T4zoNALZhdl4d9+7AIBlzy6DqbGp3s+HiBofWY6gmzZtit27d8Pa2hrDhw9Hq1at4OnpiQ0bNiAiIgJjxowBAMTHq//DdXJyqtSGUqmEra0t4uLitGXV1deUaerXtO2KwsLCYG1trf1ydnbW67k/TiIuRyA2M1b7eGLXiTAzLpv98Hf2l1xatPnsZvx2/TfkFOZg96Xd+PHyj5L2Mgv0f5NTfnReXFpcKZwBoFSUYkHUAsmbiKrczbmL6b9N1z42VBhKRsAKhQJ7RuzBdL/pcLZyxt2cu2hu3hyTuk5C5LhIqIxUWBC5AAlZCXi2zbN4scOLSMpOwuw/Z6Pf5n7ou7kvPvrzI22oExHJcgQNADY2NujatStefPFFBAQEID09HatXr8bw4cOxY8cOPPfcc8jNzQWgDkxdVCqVtg6AauurVCpJnZq2XVFoaCimTy/7Dz0zM7PRhfTK4yu13xsoDPBW97ck25uaNsVU36n495F/AwCyC7PRd3PfKttTGur+WehSWFIoedzUtCl2DN8BH0cf/Hj5R4zeNRqlohSAeiQ92XsyDBS6368mZSehz3/64Gb6TW3Zin4rJKvRAcDcxBxL+y7F0r5LK7VxKfkSlh9dDmMDY3ze73NcT72OHut7SAL5t+u/Ye3JtTg44SDcm7rr/VyJ6PEkyxH02bNn4e/vj2eeeQafffYZXnzxRYwfPx5//fUXWrdujQkTJqCgoEB7Lrr8VHJ5eXl5kvPV1dXPy8uT1Klp2xUplUpYWVlJvhqTC/cuYP/N/drHA9oNgKuNa6V6Yc+EYewTY3W2UfGcr66bfVSl/PlhQD16D3YJhoWJBUZ2Gok+bn202xKzE3E5+bLOdmIzYvHU+qdw9u7Zsj4/HYa3fN/SWb8qU3+ZiqLSIoT4hcDD1gMhe0OQmJ0Ia6U1Tr92GqdfOw1rpTWScpIQ8mtIjdomoseTLAM6PDwc+fn5GDZsmKRcqVRi8ODBSExMxKVLl9CyZUsA0DnVnJ+fj5SUFMkUdXX1K05p17Rtkio/egaki8PKMzIwwobBG3Bs0jGE9gjFyE4jMcV3Cr594Vuse2GdpG4Xhy56H9/Nxk3yuI1NG8njtk3bSh5rFnOVdy31Gnqs74GrqVcBqG+a8nm/z/FBjw/07gcA7LiwA/tu7IOjpSPmBM1BfnG+9nz2ix1exBMOT+AJhycwuP1gAOqRdEGx7jeGRNR4yHKKWxOWRUVFlbZpyoqLi+Hg4AAnJyccOXKkUr2jR49CCIHu3btry7p3746vv/4ahw8fRtu20v+gDx8+DAsLC7Rv3x4Aatw2lcksyMR/zvxH+7iDbQc84/ZMtfv4tvStdEOTST9O0n5vamSKIJegirtVya+lH3648IP2ccUATs1PlTzW3BhF4/zd83jmP89op6CNDIywYdAGjOo8Su8+AEBuUS5m/DYDAPBZn89gYWKB+Mx4FJWqf48dLcquVGhpqX5TWFRahJS8lEo3RyGixkWWI2hPT08AwIYNGyTlWVlZ+P7772Fubo6OHTsCAEaOHImYmBjs3LlTUnfZsmUwMjLCSy+9pC0bNGgQzMzM8Pnnn6O4uFhbHh0djaioKAwfPhwmJmWLlmrSNpXZcHoDsguztY+rGj0DwJWUK/gn8R9JWakoxYqjK7DuVNkIelyXcWiiaiKp57LcBYr5CijmKxC8IViy7WWvl2GoMNQ+/u78d8gvzgegntL++erP2m0tLVuibbOyN2zRCdEI2hCkDWdTI1Psfml3jcMZAD7961PcyriFp1o9hZGd1FcEWCmtoIACAJCSl6Ktm5ybDEA9Uq84RU9EjY8s78V969YtdOvWDWlpaRg5ciR69OiBtLQ0rFu3DtevX8e///1vzJihHpWkpaXBx8cHiYmJCAkJgaurKyIiIrBnzx7Mnj0bCxYskLS9YsUKhISEIDAwEKNHj0ZycjLCw8NhbGyM6Oho7dR2bdquzuN+L24NIQQ6fNkBl1PU53StldaImx4HCxMLnfU3n9mM0btGo5V1K7g3dYeBwgDn757Hnew72jqtrFvhn9f/0RnQtzLUt2gNah2EA+MOSLbP/G0mlh4pW7DVyroVPO08cSL+hCQYVz2/Cm90f0P72HqRtWTFuEczD3g199LZ/x+G/6CzHACup15Hx1UdUVxajJOvnURn+87abd3XdEd0QjQcLR1x5vUzUCgU8FrlhTvZd+Dj6IMTr56osl0ierTpmweynOJu3bo1/vnnH4SFheGPP/7Azp07YWhoiC5dumDhwoWSkauNjQ0OHjyIWbNmYc2aNcjMzIS7uztWr16N119/vVLb77zzDmxtbbF06VKEhITAzMwMffr0QVhYmCSca9M2Aftu7NOGMwCM7zK+ynAu73bGbdzOuF2p3KOZB34e9XOlcNbHp09/iutp17X3+tZ1jKm+UyXhDFS+nOtyymXJc9LXO7++g4KSArzd/W1JOAPqhWb9NvdDQlYCXFa4QAiBnKIcGCoMsejpRTU+FhE9fmQ5gn4cNZYR9AvbXsD/rvwPgHqq9sqUK9VeMnQt9RpWHF2BqNtRSMhKQEZ+BqxV1uho1xHDPIfhVe9Xq/wYxvuNoAH1iH7buW349tS3OJV4ClkFWWhm1gx+Tn540+dN9GnTp9I+ivkKvZ+vmKv7z+enKz9hwLYBsDWzxdUpV3W+wdgfsx/zIuchOiEagPpuY/OC5qGXay+9j09Ejx5984AB/ZA0loAmIqLqPfIfN0lERNSYyfIcNOnHZprN/SsR1YG08MrXiRNR/eIImoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhBjQREZEMMaCJiIhkiAFNREQkQwxoIiIiGWJAExERyRADmoiISIYY0ERERDLEgCYiIpIhWQd0RkYGQkND4eHhAZVKhaZNmyIgIAC7du2S1EtKSsKECRNgb28PlUqFzp07Y82aNVW2u23bNnh7e8PU1BS2trYYMWIEbt26pbNuTdsmIiKqC0YN3YGqxMbGolevXkhNTcX48ePh6emJ3NxcXLp0Cbdv39bWS09PR48ePRAfH4+QkBC4uroiIiICkydPRkJCAubOnStpd+XKlZgyZQoCAwMRHh6O5ORkLF++HFFRUThx4gQcHR1r3TYREVFdUQghREN3Qpfg4GBcvnwZx48fh7Ozc5X1QkNDsWjRIuzYsQNDhgzRlr/wwgv49ddfcfnyZbi6ugIAUlJS4OLignbt2uHYsWMwMlK/P4mOjoavry8mTJiAtWvX1qrt+8nMzIS1tTUyMjJgZWVVo9eiKjbTbOqkHaL7SQtPa+guED029M0DWU5x//XXX4iMjMT7778PZ2dnFBcXIycnR2fdLVu2wNXVVRKgADB9+nQUFRXhu+++05ZFREQgOzsbU6dO1YYzAPj4+KBnz57Yvn07CgsLa9U2ERFRXZJlQP/8888AADc3NwwZMgSmpqawsLCAi4sLVq5cqa2XmJiI2NhY+Pv7V2rD398fCoUCx48f15Zpvg8ICKhUPyAgAFlZWbh06VKt2q6ooKAAmZmZki8iIiJ9yTKgNSE5adIkxMfHY926ddi0aRNatGiBKVOm4OOPPwYAxMfHAwCcnJwqtaFUKmFra4u4uDhtWXX1NWWa+jVtu6KwsDBYW1trv6qbpiciIqpIlgGdlZUFADA3N0dUVBTGjBmD0aNHIzIyEm3atEFYWBjS0tKQm5sLQB2YuqhUKm0dANXWV6lUkjo1bbui0NBQZGRkaL9iY2Orfc5ERETlyTKgTU1NAQAjR46UBKSJiQlGjRqFvLw8HDt2DGZmZgDU08m65OXlaesAqLZ+Xl6epE5N265IqVTCyspK8kVERKQvWQa0Zlq5RYsWlbZpylJTU9GyZUsA0DnVnJ+fj5SUFMkUdXX1K05p17RtIiKiuiTLgPbz8wMAndPCmmug7e3t4eDgACcnJxw5cqRSvaNHj0IIge7du2vLNN8fPny4Uv3Dhw/DwsIC7du3B4Aat01ERFSXZBnQgwYNgpWVFTZt2oSMjAxteVZWFjZu3AgbGxvt6uqRI0ciJiYGO3fulLSxbNkyGBkZ4aWXXpK0a2Zmhs8//xzFxcXa8ujoaERFRWH48OEwMTHRltekbSIiorokyzuJNWnSBOHh4Zg4cSJ8fX0xadIkKBQKrFu3Dnfu3MGGDRu0538/+OAD/PDDDxg9ejT+/vtv7d2+9uzZg9mzZ8PNzU3brq2tLT799FOEhIQgODgYo0ePRnJyMsLDw2Fvb48FCxZI+lGTtomIiOqSbO8kBgD/+9//sHjxYpw+fRpCCHh7eyM0NBTPPfecpN6dO3cwa9Ys/PTTT8jMzIS7uzvefvttvP766zrb3bJlC5YuXYqLFy/CzMwMffr0QVhYmM67gtW07arwTmL0KOOdxIjqjr55IOuAfpwwoOlRxoAmqjuP9K0+iYiIGjsGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhmod0Ldv30Zqaup966WlpeH27du1PQwREVGjVOuAdnV1xbvvvnvfeu+99x7c3NxqexgiIqJGqdYBLYSAEELvukRERKS/ej8HnZycDFNT0/o+DBER0WPFqCaVo6KiJI8TExMrlWkUFxfj8uXL+PXXX+Hl5VX7HhIRETVCNQro4OBgKBQK7eO9e/di7969VdYXQkChUGDGjBm17yEREVEjVKOAHjNmjDagN27ciDZt2iAwMFBnXRMTEzg6OmLgwIHo1q3bg/eUiIioEalRQG/YsEH7/caNG9GjRw98++23dd0nIiKiRq9GAV1eaWlpXfaDiIiIyuGdxIiIiGSo1iNoACgoKMC2bdsQFRWFO3fuoKCgQGc9hUKBP/7440EORURE1KjUOqDj4+Px9NNP4+rVq/e9EUn5ld9ERER0f7UO6HfffRdXrlxBQEAAZsyYgXbt2sHCwqIu+0ZERNRo1Tqg9+7di1atWuH333+HSqWqyz4RERE1erVeJFZQUIDu3bsznImIiOpBrQO6U6dOiIuLq8u+EBER0f+rdUC///77OHHiBCIjI+uyP0RERIQHOAfdrVs3zJgxAwMHDsT06dPRp08fODk5Vbliu1WrVrXuJBERUWOjELX8sGYDAwMoFArtB2JUexCFAsXFxbXq4OMiMzMT1tbWyMjIgJWVVZ20aTPNpk7aIbqftPC0hu4C0WND3zyo9Qi6Z8+evL6ZiIiontQ6oA8cOFCH3SAiIqLyeC9uIiIiGWJAExERyVCtp7gXLFigd12FQoHZs2fX9lBERESNTp2s4tbZ8P8vINOs8i4pKal9Lx8DXMVNjzKu4iaqO/W+inv9+vU6y0tLSxEbG4u9e/fiyJEjeOutt+Dj41PbwxARETVKtR5B6yMsLAwLFy7EkSNH0KlTp/o6zCOBI2h6lHEETVR39M2Del0kFhoaCicnJ8yaNas+D0NERPTYqfdV3J06dcLBgwfr+zBERESPlXoP6OvXrzf623wSERHVVL0FdHp6OmbMmIHTp0/D19e3vg5DRET0WKr1Km43N7cqt2VnZyMlJQVCCJiamiIsLKy2hyEiImqUah3QN2/erHKbsbExnJ2dERQUhPfffx+enp61PQwREVGjVOuALi0trct+EBERUTm8FzcREZEM1WlAZ2VlITs7uy6bJCIiapQeOKB//fVXPP/887C2tkaTJk1gbW0NKysr9O/fH7/++mtd9JGIiKjReaCAnj59ujaIs7KyYGVlBSsrK2RnZ+OXX35B//79MX369LrqKxERUaNR64D+7rvvsHz5ctjZ2eHzzz9HWlqa9is9PR1ffPEFmjdvjhUrVmD79u112WciIqLHXq0DetWqVVCpVIiKisLbb78Na2tr7TYrKyu89dZbiIyMhFKpxKpVqx6ok7m5uXBzc4NCocDrr79eaXtSUhImTJgAe3t7qFQqdO7cGWvWrKmyvW3btsHb2xumpqawtbXFiBEjcOvWLZ11a9o2ERFRXaj1ZVb//PMPevfujXbt2lVZp127dujdu/cD34t7zpw5uHfvns5t6enp6NGjB+Lj4xESEgJXV1dERERg8uTJSEhIwNy5cyX1V65ciSlTpiAwMBDh4eFITk7G8uXLERUVhRMnTsDR0bHWbRMREdWVWgd0YWEhzM3N71vP3NwchYWFtT0MTp06heXLl2Px4sWYOXNmpe2LFy/GtWvXsGPHDgwZMgQA8Oqrr+KFF17AwoULMWbMGLi6ugIAUlJSEBoaim7duuHAgQMwMlI//X79+sHX1xdz5szB2rVra9U2ERFRXar1FHebNm0QGRmJ3NzcKuvk5uYiMjISbdq0qdUxSkpK8Oqrr6Jv377417/+pbPOli1b4Orqqg1QjenTp6OoqAjfffedtiwiIgLZ2dmYOnWqNpwBwMfHBz179sT27dslbyZq0jYREVFdqnVADx8+HHfv3sWQIUNw48aNStuvX7+OIUOG4N69e3jppZdqdYzly5fjwoULWLlypc7tiYmJiI2Nhb+/f6Vt/v7+UCgUOH78uLZM831AQECl+gEBAcjKysKlS5dq1TYREVFdqvUU98yZMxEREYHffvsNHh4e8PX1hYuLCxQKBWJiYnD8+HGUlJTAx8cHM2bMqHH7t27dwty5czF79my4urrqvPd3fHw8AMDJyanSNqVSCVtbW8TFxelVX1MWFxeHzp0717jtigoKClBQUKB9nJmZWWVdIiKiimo9gjY1NcWBAwfw1ltvwcTEBEeOHMG2bduwdetWHDlyBCYmJnjrrbfw559/wtTUtMbtv/HGG2jdurXO884amul1pVKpc7tKpZJMwVdXX6VSSerUtO2KwsLCYG1trf1ydnausi4REVFFtR5BA4CFhQW++OILLF68GH///TcSEhIAAI6OjvD29oaZmVmt2t26dSt++eUXREZGwtjYuMp6mvbLj1TLy8vLg4ODg876Fd805OXlSerUtO2KQkNDJTdpyczMZEgTEZHeahTQf/75J+Li4uDj4yP5CEkzMzM89dRTkroXLlxAdHQ0nJ2d0atXL72PUVhYiGnTpmHAgAFo1aqVdmpbM52clZWFmzdvwsbGBi1btpRsKy8/Px8pKSmSfpWv37ZtW0n9ilPaNW27IqVSWeXom4iI6H70nuKOjY1F//798cknn+g1EnR2dsbChQsxYMAA7chaH7m5ubh79y727NkDV1dX7ZcmDLdu3QpXV1esXr0aDg4OcHJywpEjRyq1c/ToUQgh0L17d22Z5vvDhw9Xqn/48GFYWFigffv2AFDjtomIiOqS3gG9du1aFBYWYsmSJbC0tLxvfUtLS3z22WfIy8vDunXr9O6Qubk5du3aVenr66+/BgD07dsXu3bt0l52NXLkSMTExGDnzp2SdpYtWwYjIyPJCvJBgwbBzMwMn3/+OYqLi7Xl0dHRiIqKwvDhw2FiYqItr0nbREREdUkhhBD6VAwICMCNGzeQmJhYowO0aNECrq6uOketNXHz5k24urritddew1dffaUtT0tLg4+PDxITEyV3+9qzZw9mz56NBQsWSNpZsWIFQkJCEBgYiNGjRyM5ORnh4eEwNjZGdHS0dmq7Nm1XJzMzE9bW1sjIyICVldUDvRYaNtNs6qQdovtJC09r6C4QPTb0zQO9z0FfunQJgYGBNe6Ij4/PA4dzdWxsbHDw4EHMmjULa9asQWZmJtzd3bF69Wqd9+1+5513YGtri6VLlyIkJARmZmbo06cPwsLCJOFcm7aJiIjqit4BnZOTI/lADH1ZW1sjOzu7xvtV5OLigqoG+y1atMD69ev1bmvUqFEYNWqUXnVr2jYREVFd0PsctI2NDZKSkmp8gKSkJNjYcCqWiIioJvQOaE9PTxw9elR7vbA+cnNzceTIEcklWURERHR/egf0wIEDkZOTg08++UTvxj/55BPk5eVh4MCBteocERFRY6V3QL/22mtwcHDAokWL8Mknn6C0tLTKuqWlpfj444+xaNEi2Nvb47XXXquTzhIRETUWei8SMzMzw86dO/H0009j7ty5WLNmDYYNG4Zu3brBzs4OAHDv3j2cPHkS33//PeLi4qBSqbBjx45a3/KTiIiosarRrT79/Pxw5MgRvPLKKzh37hzCw8Mr1dGstO7YsSM2b96MJ554om56SkRE1IjU+MMyOnfujDNnzmDv3r346aefcOrUKaSkpEAIAVtbW3Tp0gX9+/dHv3796qO/REREjUKtP82qb9++6Nu3b132hYiIiP5frT8PmoiIiOoPA5qIiEiGGNBEREQyxIAmIiKSIQY0ERGRDDGgiYiIZIgBTUREJEMMaCIiIhliQBMREckQA5qIiEiGGNBEREQyxIAmIiKSIQY0ERGRDDGgiYiIZIgBTUREJEMMaCIiIhliQBMREckQA5qIiEiGGNBEREQyxIAmIiKSIQY0ERGRDDGgiYiIZIgBTUREJEMMaCIiIhliQBMREckQA5qIiEiGGNBEREQyxIAmIiKSIQY0ERGRDDGgiYiIZIgBTUREJEMMaCIiIhliQBMREckQA5qIiEiGGNBEREQyxIAmIiKSIaOG7gAR0WOjpARIywTSs4CsHKCgCCgqAqAAVCZAE0ugpT1gptK9f14+EJuobqOgCDA0AMxNAftmgIMtoFDUrD9CAHFJQGYOkJsHFBYDxcXqdpUmgJUF0MJW/a8u+QVA/F0gPRPIK1Q/PwMD9XOxtgRaNlf3r+JrcDMBuJcGFBYBxkZAU2vArSVgbFz5GInJwOWbgKkS8Omobp8AMKCJiOpOagZw4YaODQLIzVd/JSYD7d0AOxtpleQ09b5ClJUVlwAZ2eqvu6mAlztgaKh/f4QAbsRVLi8plfanjTPgZC+tk5EFnL2qrlteaYV927sCzZuWHe/sVXV/AcDEWB3SiclAZjbg7SkN4OLisv65t2I4V8BXg4ioPhgZATZWgLWFdORbKoBLMUBBYVlZbr40nA0MgKZW0pF2ehZw9Xbt+mKgUI90m1qpR74Vg/BGnLQ/AHDlljScTYzVI2FTZVmZENJ66Vll4ezeCvB/Qv2mQvMc76ZKj3EzASgqBpo1UbdNEhxBExHVJXNTwMVRHTqaYM7NB05dUo8YAfUo9G4q4OygfhwTVxbOCgXQpT1gaaYuu3hDPV0MAEkp6pGuhZl+fVEoAE83dfiVH3kXFgGnL6un1AH1cTKzAbv/HwkXFav7rGGqBLw7qqfGhQDOXFGHMaCe0s7JA6zM1dP6GvbN1P82awIYGapnA7Jy1FP1AJCdCyTcU795aOOs3/NpZDiCJiKqK00s1dO4tjbSUbOZCnC0k9bNK1D/W1wMpGRI27D8/wBWKCpPPSel6N8fhUIduhWnxTWj4fLKj6ornus2N1OHs2ZbxTcIRjWYdte4dlsd9s4O0lE5aTGgiYjqirFx1Qu5TCoskNKEWlau9Lyzpbm0XsUwzMzBAysqAtLKvSkwNJAuFDMylPYjLUO9cK20VD0KvlduqtrctCxgy++jeSORkq4ePZffnpSingpXmQDOLR78+TymOMVNRPQwpGVKH1v/fyDm5UvLKwa5gUHZFLGu+vooLlGvlIZQT19n5arDVtO+h6t6tXV5Hi7qqezCIvU55jNXKrdrYQZ4til7U9LEUn2OOyNLPUK+fUe9P6CeRWjeVD0lrlkY1sa5bGROlTCgiYjq271U9UhSw8KsbIpZE7waulYyGxqU1atYXx+iVL1KvCIjQ3UQ29pU3mZuCnTroF6VnZNXebvKBHBpKZ2eViiATu7Sy6w00+luLdXP7XqsutzGSn3cwiL1pVya89eW5urLtyq+UWmEGNBERPUpOQ24GFP22NhIOuqsROhVVCeKS4Dz19Xnx9u2lm5LzwLOXyt7Q2BspH5jUVCoXkCWXwicu6o+R15+kZehofqxroVfuXnqMFYo1Ku88/LVi9U0o2xAPdNw5x7QtT1gWsX14o0EA5qIqL4kpainljXnmI2NgM7tpKPOigu4SnWkcWm5y51qsyDL2BgI8lH3o6hYHYI34sqCMeFe2YhWc7yLN8rC2cJUvbLc0FDdxtXb6hAF1DdCsW2intq+n2ux6v2d/v9mLWevqvtgaAh08VDXOX1Z3cdrsUCntjV/ro8RTv4TEdWHhHvq65014aw0UYdQxUVfFe8qVvF65NJS6bT2g4wqFQr11LF9s8oj5uT0su8zsqWj2ubNyt5IKBTqu4+Vl1rh/Lou99LUbwxMjNWXoZWWlp2Xt22ifl0szNTfA2WL0hoxWQb0lStXMGfOHPj5+cHOzg6Wlpbo0qULFi5ciJycyisYk5KSMGHCBNjb20OlUqFz585Ys2ZNle1v27YN3t7eMDU1ha2tLUaMGIFbt27prFvTtomIEJsIXC33f4qpSh3OZqaV61qaSae7s3Ol27MqPLaqsMq7tpQVzvGWD+SiIum2+91htKi4+u0lJepzzwDg5qQO+6Licm9eyvVF871mtN+IyXKK+9tvv8XKlSsxcOBAjBw5EiYmJti/fz8++ugjbN++HUePHoWpqfoXPT09HT169EB8fDxCQkLg6uqKiIgITJ48GQkJCZg7d66k7ZUrV2LKlCkIDAxEeHg4kpOTsXz5ckRFReHEiRNwdHTU1q1p20REuBkP3LpT9tjCTD1VW9WiJyMjoJl12QhWcx9vS/Oye2mXp7kBiMbRM2WjbmsL9VS0RmyieoRuY1XhFpsl0j4C0ml3ExPptqRUoIVd2RT3nWTpdlWF+hXdTlT30dqirP/lp/aLys0QlA/l2kznP0YUQoj6Wn5Qa9HR0XB3d0eTJk0k5R999BEWLlyIlStX4q233gIAhIaGYtGiRdixYweGDBmirfvCCy/g119/xeXLl+Hq6goASElJgYuLC9q1a4djx47ByMhIezxfX19MmDABa9eu1bZRk7bvJzMzE9bW1sjIyICVlVWtXpeKbKbpWHlJVA/SwnWsAKbKktPUi67Ks7HSff/sJv//YROAepX03xekt/psYqFeiFX+jl72zdT3vi6vuoA+d029etzQQH2zEWMj9Y1RsnMr32O7W4ey65RLS4HjZ9Uf2KFhbKQe7Vfsk0Kh/pCL6j4A5MR59XPz9pRO8Z+8oJ4hMDFWtwEA0efVo3lLM6Cbp+42H3H65oEsp7h9fHwqhTMADB8+HABw9uxZbdmWLVvg6uoqCVAAmD59OoqKivDdd99pyyIiIpCdnY2pU6dqw1lzvJ49e2L79u0oLCysVdtERDovgUrLVAd3xa/yt8U0NwU6uJVNdZeWqs/rlg9Cawugbava9aukVH0rz5R09fnl8uGsUADtXKQ3GTEwUH+gR/lrlIuKK/cJANydqw5noGxhmGPzyuffXZ3U/xYWAcfOqN9saKbaNdsaMVkGdFXi4+MBAM2bq991JiYmIjY2Fv7+/pXq+vv7Q6FQ4Pjx49oyzfcBAQGV6gcEBCArKwuXLl2qVdsVFRQUIDMzU/JFRFQlOxv1KNLBVj1lrFCop3itLNQLup7wqNknWQHq22g62avbUJqog1ehUI+GrSyAVi0AX6/Ki74A9Qi/u5e6DUuzsmMbGKgDuYWtekTs2Lzq46ekqz/hy9gIcHWsvN3GSr2q3dqi7FIyawt1mU3dzDQ+ymR5DlqXkpISLFiwAEZGRhg1ahSAssB2cqr8TkupVMLW1hZxcWUftVZdfU1ZXFwcOnfuXOO2KwoLC8P8+fP1fXpE9DhwsC37MIjaMFOpbxxSE36dq95mbVF2x7LaUJqoF3XVVrMm6su7qmNjxTCuwiMzgp46dSqOHj2KefPmwcNDfb1cbq56daNSqftG6yqVSlvnfvVVKpWkTk3brig0NBQZGRnar9jY2GqfHxERUXmPxAj6o48+wqpVqzBp0iTMmjVLW25mpj6fUVBQoHO/vLw8ODg46KyvWQVevm75OjVtuyKlUllluBNR3cg/9k9Dd4EaCdWTTzz0Y8p+BD1v3jwsXLgQY8aMwddffw1FuesFW7ZsCQA6p5rz8/ORkpIimaKurn7FKe2atk1ERFSXZB3Q8+fPx/z58/HKK69g/fr1MKhwE3kHBwc4OTnhyJEjlfY9evQohBDo3r27tkzz/eHDhyvVP3z4MCwsLNC+fftatU1ERFSXZBvQCxYswLx58zBq1Chs2LChUjhrjBw5EjExMdi5c6ekfNmyZTAyMsJLL72kLRs0aBDMzMzw+eefo7i47GL46OhoREVFYfjw4TApd4F+TdomIiKqS7I8B/3ll19i7ty5aNWqFfr06YNt27ZJttvb26NPnz4AgA8++AA//PADRo8ejb///lt7t689e/Zg9uzZcHNz0+5na2uLTz/9FCEhIQgODsbo0aORnJyM8PBw2NvbY8GCBZLj1KRtIiKiuiTLgD5x4gQA4Pbt2xg3blyl7UFBQdqAtrGxwcGDBzFr1iysWbMGmZmZcHd3x+rVq/H6669X2vedd96Bra0tli5dipCQEJiZmaFPnz4ICwvTnnfWqGnbREREdUWWt/p8HPFWn/Qok+utPrmKmx6WulzF/Ujf6pOIiKixY0ATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoPWwbds2eHt7w9TUFLa2thgxYgRu3brV0N0iIqLHGAP6PlauXImRI0fC1NQU4eHhCAkJwb59+xAQEICEhISG7h4RET2mjBq6A3KWkpKC0NBQdOvWDQcOHICRkfrl6tevH3x9fTFnzhysXbu2gXtJRESPI46gqxEREYHs7GxMnTpVG84A4OPjg549e2L79u0oLCxswB4SEdHjigFdjePHjwMAAgICKm0LCAhAVlYWLl269LC7RUREjQCnuKsRHx8PAHBycqq0TVMWFxeHzp07V9peUFCAgoIC7eOMjAwAQGZmZp31TxSIOmuLqDp1+Xtbl/Jzshu6C9RIFNbh34Dm70mI6v8PZ0BXIzc3FwCgVCorbVOpVJI6FYWFhWH+/PmVyp2dneuwh0QPh/Vq64buAtFjJysrC9bWVf9tMaCrYWZmBkA9GjY1NZVsy8vLk9SpKDQ0FNOnT9c+Li0tRWpqKpo1awaFQlFPPabqZGZmwtnZGbGxsbCysmro7hA1CP4dNDwhBLKysuDo6FhtPQZ0NVq2bAlAPY3dtm1bybbqpr8B9ai74si7SZMmdd9JqjErKyv+x0SNHv8OGlZ1I2cNLhKrRvfu3QEAhw8frrTt8OHDsLCwQPv27R92t4iIqBFgQFdj0KBBMDMzw+eff47i4mJteXR0NKKiojB8+HCYmJg0YA+JiOhxxSnuatja2uLTTz9FSEgIgoODMXr0aCQnJyM8PBz29vZYsGBBQ3eRakCpVGLu3Lk6F/0RNRb8O3h0KMT91nkTtmzZgqVLl+LixYswMzNDnz59EBYWBldX14buGhERPaYY0ERERDLEc9BEREQyxIAmIiKSIQY0NUoHDhyAQqHAhg0bGrQfN2/ehEKhwLx58xq0HyQvwcHBcHFxaehuPBSN6bnWFAOa6oUmAMt/WVhYoFu3bggPD5dctlYTp0+fxrx583Dz5s267TBRPcvPz8cXX3yBoKAgNGvWDMbGxmjevDn69u2LNWvWSO7dTwTwMiuqZy+99BIGDBgAIQQSExOxadMmTJ8+HRcvXsQ333xT4/ZOnz6N+fPnP/C77p49eyIvLw/Gxsa1boNIXzdv3kT//v1x4cIF9O7dG++//z7s7OyQkpKCAwcO4PXXX8eJEydq9TdBjy8GNNWrLl264JVXXtE+fvPNN9GhQwesXbsWCxcuhJ2dXYP0y8DAQPuBJ0T1KT8/HwMGDMDly5exfft2DBs2TLJ95syZOHfuHH777bcG6iGQnZ0NCwuLBjs+6cYpbnqozM3N8eSTT0IIgevXr2vL79y5gzfeeAOtWrWCiYkJHB0dMXnyZNy9e1dbZ9y4cRg/fjwAoFevXtqpc83524SEBMyYMQNdunSBjY0NVCoVPD09sXjxYpSUlEj6oescdPmytWvXwtPTE0qlEq1bt8aSJUt0Pp/o6Gi8+OKLsLW1hVKphIeHBxYuXKhzCn/Pnj3w8fGBSqVCixYtMHXqVOTk5NT2paRHxLp163D+/HlMnz69UjhreHl5ST5cRyMuLg7Dhw+HjY0NzM3N0bdvX1y5ckVSZ968eVAoFDpP+7i4uCA4OFhSplAoMG7cOPzxxx/o0aMHLCwsMGDAAEn98+fPo1+/frC0tIS1tTWGDh2KxMTESu1nZGTg/fffh7u7O5RKJezs7DBixAjcuHGjUt34+HiMGDECTZo0gYWFBXr37o2TJ09W9bIROIKmBqAJ5mbNmgEAbt++DX9/fxQWFmLixIlo06YNrl+/jlWrVmH//v2Ijo6GtbU1XnvtNSiVSnzzzTeYNWsWOnToAADaz+M+c+YMdu/ejSFDhsDV1RWFhYX45Zdf8MEHH+DGjRv4+uuv9erf6tWrcffuXUyaNAnW1tbYvHkz3n//fTg5OWHkyJHaej///DNefPFFuLu7Y8aMGWjatCmOHDmCOXPm4PTp0/j++++1dXft2oWhQ4eiZcuW+PDDD2Fubo6tW7fi0KFDdfKaknxpfg9ee+21Gu2Xk5ODoKAg+Pv749NPP0VMTAxWrFiBQYMG4dy5czA0NKx1n6Kjo7Fz505MmjQJY8eOlWyLj49H7969MWTIELz44os4deoUvvnmG2RmZkpG+RkZGQgICMDt27cxYcIEdOzYEXfu3MHq1avx5JNPIjo6Gq1btwYApKen46mnnsKtW7cwadIkdOnSBSdOnMDTTz+t/X+AdBBE9WD//v0CgJg9e7a4d++euHv3rjhz5ox48803BQDRvXt3bd2BAwcKW1tbERsbK2njxIkTwtDQUMydO1dbtn79egFA7N+/v9Ixc3NzRWlpaaXyV155RRgYGIiEhIRK/Vu/fn2lshYtWoi0tDRteU5OjrC1tRV+fn7asry8PNG8eXPx1FNPiaKiIsnxli1bJuljcXGxcHZ2FtbW1uLOnTvaevn5+cLb21sAkDxHerw0bdpUWFpa1mifoKAgAUAsXrxYUr5kyRIBQPz666/asrlz5woAIiYmplI7rVu3FkFBQZIyAAKA+OOPP3TWByC+++47Sbnm7/bixYvasilTpgiVSiVOnz4tqXvz5k1haWkpxo4dqy0LDQ0VAMTq1asldT/77DMBQLRu3VrXy9DocYqb6tXHH38MOzs7NG/eHJ07d8aqVaswePBg/PjjjwDU76x/+uknDBgwACqVCsnJydovFxcXuLu7631uztTUVPtZ24WFhUhNTUVycjL69u2L0tJSREdH69XO+PHjJR8NamZmBj8/P1y9elVbtm/fPty9exdjxoxBenq6pN/PP/88AGj7ffLkScTGxmLcuHFwcHDQtqFUKnVOa9LjJTMzs1Yf62hgYICpU6dKynr37g0Akt/F2ujSpYu2rYocHR0xfPhwnce9du0aAPXnGW/duhWBgYFo2bKl5Pff3Nwcfn5+kr/biIgINGvWDJMmTZK0O2XKFFhaWj7Qc3mccYqb6tXEiRPx8ssvo7i4GOfOncOiRYuQlJQEU1NTAMCVK1dQWlqKDRs2VHlNspubm17HKi4uxqJFi7Bp0yZcu3YNosJdbNPS0vRqR9fxmjVrhpSUFO3jixcvAgBeffVVvPrqqzrbSUpKAlA2pa+Zki/P09NTrz7Ro8vKygpZWVk13s/R0bHSQkbNdHD538XaqPj59uVV9ftf/rj37t1DSkoK/vjjjyoXehoYlI3/rl+/jq5du8LISBo5SqUSbm5uSE9Pr+lTaBQY0FSv3N3d8cwzzwAA+vXrhx49eiAwMBBvvPEGtm7dqg3RESNGYMKECTrb0IT5/UybNg0rV67ESy+9hA8//BDNmzeHsbExTp48iffffx+lpaV6taPPuT1NvxctWgRvb2+ddRwdHSWPNaN7alw6deqEyMhIXL9+HW3atNF7v+p+D8u/+azu96qq+w2YmZk90HE1//bq1QuzZs2qsn55/P2vOQY0PVR+fn545ZVXsGnTJkydOhVt27aFQqFAQUGBNsirU90f+ebNm9GzZ0/897//lZRrpuXqUrt27QCo/6O7X781/ylfuHCh0jZdZfR4GTp0KCIjI7FmzRosWrSozttv2rQpACA1NVVyb4D8/HzcuXMH7u7udX5MOzs7NGnSBBkZGXr93bZp0wZXrlxBcXGxZBRdUFCAGzduaJ8DSfEcND10s2fPhqGhIWbPno1mzZrh+eefR0REhM4VzUII3Lt3T/tYc62mrulqQ0PDStPaOTk5CA8Pr+NnAPTt2xfNmzfHkiVLkJycXGl7Xl6edlqzW7ducHZ2xsaNGyWXqhQUFGDZsmV13jeSl4kTJ6JDhw5YunQpdu7cqbPO2bNnsXTp0lq1r3mz+Pvvv0vKw8PD9Z41qikDAwOMGjUKJ0+erPSGWKP8JZKDBw9GSkoK1q5dK6nzxRdf1Gr6v7HgCJoeOnd3d7z88svYsmUL/vrrL6xevRo9evRAr169MHr0aHTr1g2lpaW4ceMGIiIiMGbMGO21zj4+PjAwMEBYWBjS0tJgZmYGLy8veHl5YejQofj666/x0ksv4ZlnnkFSUhK+/fbbermMw8zMDJs2bcLgwYPRvn17TJgwAW3btkV6ejouXbqEnTt3YteuXQgODoahoSFWrFiBoUOHwtfXF5MnT4a5uTm2bNlS6Q0FPX5MTU2xZ88e9O/fH//617/wzDPP4Nlnn4WtrS1SUlIQGRmJn3/+ucq1DPfzzDPPoH379pgzZw5SUlLg6uqKgwcP4ujRo7C1ta3jZ1Nm4cKFOHToEEaOHIldu3bB398fJiYmuHXrFn7++Wd4e3tr15W8++672LZtG9566y2cPn0aTzzxBE6cOIFdu3ahTZs2tb7172OvoZaP0+NNc8lSWFiYzu0XLlwQBgYGIjg4WAghxL1798TMmTNF27ZthVKpFNbW1sLLy0tMnTpVnD9/XrLvunXrRLt27YSRkZHkEqWcnBwxc+ZM0apVK6FUKoW7u7sICwsTv//+e5WXVN2vTGPs2LFC15/L2bNnxahRo4Sjo6MwNjYWzZs3F/7+/mLBggUiJSVFUvd///uf6Natm1AqlcLe3l68/fbb4ty5c7zMqpHIyckRy5cvFz169BA2NjbCyMhI2NnZib59+4p169aJgoICbd2goCCdlx7FxMTo/H25fPmy6Nu3rzA1NRXW1tZi2LBhIi4ursrLrMpfAlWervpCVP23kZOTIxYsWCC8vLyESqUSFhYWon379mLSpEni6NGjkrpxcXHi5ZdfFtbW1sLc3Fz06tVL/P3331U+VxJCIQTfwhMREckNz0ETERHJEAOaiIhIhhjQREREMsSAJiIikiEGNBERkQwxoImIiGSIAU1ERCRDDGgiIiIZYkATERHJEAOaqJHat28fBg8eDAcHB5iYmKBZs2bw9PTEqFGjsGbNGhQWFjZ0F4kaNd7qk6gRmjt3LhYsWAAA8PLyQrt27WBoaIjLly/j7NmzEELgzp07cHBwAKD+mM/WrVvj5s2bdXL8mzdvwtXVFUFBQThw4ECdtEn0uOGnWRE1MtHR0ViwYAFMTEywa9cuPP/885Lt8fHxWLNmDZRKZQP1kIgABjRRo7Nr1y4AwPDhwyuFMwC0bNlS+/GeRNRweA6aqJG5d+8eAMDOzu6+dTds2ACFQgEAuHXrFhQKhfYrODhYW+/06dN477334O3tDTs7OyiVSri5ueHNN99EQkKCpM158+bB1dUVABAZGSlpc9y4cQDUU+AVj1GxDYVCof28YY2UlBTMmjULHTt2hIWFBaytrdGuXTuMGTMGx48f1+PVIZIPjqCJGhknJycAwI4dOxAaGlptULu7u2Ps2LHYuHEjzM3NMXToUO229u3ba79ftGgRfvjhB3h5eSEwMBAKhQKnT5/G6tWrsXv3bkRHR8PR0REA0KVLF/zrX//Cjh07YG9vj379+mnb6dGjR62fV3Z2Nvz8/HDt2jW0bdsWffv2BQDcvn0b27Ztg5ubG3x9fWvdPtFD16CfRk1ED921a9eESqUSAISVlZUYM2aMWLNmjTh37pwoLS3VuQ8A0bp16yrb/OOPP0RCQoKkrKSkRMyfP18AEOPHj5dsi4mJEQBEUFCQzvbut33u3LkCgFi/fr22bP369QKAmDJlSqX6SUlJ4uzZs1X2n0iOOMVN1Mi0adMGERERcHR0RGZmJjZt2oRXX30VXl5ecHBwwHvvvYf09PQatdm7d2+0aNFCUmZgYIA5c+agZcuWiIiIqMNnoNvdu3e1famoefPm8PLyqvc+ENUlTnETNULPPvssbty4gR9//BH79u3DsWPHcO7cOdy9exefffYZdu3ahcOHD+t1nlojJSUFP/74I86dO4f09HSUlJQAAIqKipCamorU1FQ0bdq0vp4SvL29AQCzZs2CkZERnnnmGahUqno7HlF9Y0ATNVJKpRLDhg3DsGHDAKgXj23YsAHz5s3DtWvXMGvWLKxZs0avtrZt24bJkycjOzu7yjpZWVn1GtBPP/00pk2bhuXLl2PgwIEwMTFBly5d8Oyzz2LixIlwcXGpt2MT1QdOcRMRAPWq7nfffReLFy8GAPz000967Xfr1i2MGzcOBQUFWL58Oa5evYrc3FwIISCEgL+/PwBA1OE9kUpLS3WWL1u2DBcvXsTixYsRHByM8+fP45NPPoGHhwd2795dZ8cnehgY0EQkobm0KTk5Wa/6P//8MwoLCzF16lS88847cHd3h6mpqXb7jRs3atwHExMTAKhyRB4bG1vlvh4eHnjvvfewd+9eJCcn49///jcKCwvx2muv1bgfRA2JAU3UyNxvJHv9+nUA0F4WBQDGxsYoLi7WWT8tLQ0A4OzsXGlbVFQUkpKSKpVrAriqNm1tbWFsbIyYmJhKdQoLCxEZGVntc9BQqVSYMWMGWrRogbt372oXkhE9ChjQRI3M7Nmz8d577yEmJqbStqtXr2LGjBkAgCFDhmjLHR0dkZSUpHN1d7t27QAAmzdvRk5OjrY8Pj4er7/+us4+aAL4+vXr2sVk5ZmYmMDPzw+pqan48ssvteVFRUWYNm2azr7v3r0bR48erVR+6tQpJCUlwdLSEjY2Njr7QyRH/LAMokYmJCQEK1asgEKhgIeHBzp06ABjY2Pcvn0bx48fR2lpKby9vfHHH3/A2toaADB16lR88cUXcHV1RUBAAFQqFTw8PPDuu++isLAQ3bp1w/nz5+Hg4IDAwEDk5+dj//796NKlCwDg8OHDiImJkSzUeuGFF/C///0PHTt2RLdu3WBiYoLAwECMHz8eAPD777+jb9++KC0thb+/PxwcHPD3338jNzcX/fv3x8aNG7F+/Xrt3cc0z6tly5bo2rUrrKyskJCQgIMHD6K4uBjLly/HO++88zBfaqIH05AXYRPRw3fv3j2xadMmMWrUKOHl5SWaNm0qjIyMhK2trejVq5f48ssvRUFBgWSf7Oxs8fbbbwtnZ2dhZGRU6SYiqamp4o033hAuLi5CqVQKNzc38f7774ucnBwRFBQkAIiYmBhJm0lJSWL06NHCwcFBGBoaCgBi7Nixkjp79uwR3bt3F0qlUjRt2lQMHz5cxMTE6LxRyalTp8SMGTNE9+7dRfPmzYVSqRStW7cWL7zwgti/f3/dvohEDwFH0ERERDLEc9BEREQyxIAmIiKSIQY0ERGRDDGgiYiIZIgBTUREJEMMaCIiIhliQBMREckQA5qIiEiGGNBEREQyxIAmIiKSIQY0ERGRDDGgiYiIZOj/AJXvA7MFC30JAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 500x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(5, 4))\n",
    "\n",
    "sns.countplot(x='Exited', data=df, palette=colors, ax=ax)\n",
    "\n",
    "for index, value in enumerate(df['Exited'].value_counts()):\n",
    "    label = '{}%'.format(round((value / df['Exited'].shape[0]) * 100, 2))\n",
    "    ax.annotate(label,\n",
    "                xy=(index, value + 250),\n",
    "                ha='center',\n",
    "                va='center',\n",
    "                color=colors[index],\n",
    "                fontweight='bold',\n",
    "                size=font_size )\n",
    "\n",
    "ax.set_xticklabels(['Retained', 'Churned'])\n",
    "ax.set_xlabel('Status')\n",
    "ax.set_ylabel('Count')\n",
    "ax.set_title('Distribution of churn')\n",
    "ax.set_ylim([0, 9000]);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "b0dcd3b7-0c03-498b-a9d3-cdb8957baf59",
   "metadata": {},
   "outputs": [],
   "source": [
    "categorical = ['Geography', 'Gender', 'Tenure', 'NumOfProducts', 'HasCrCard', 'IsActiveMember']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "c600a4fc-13c0-417f-ad16-6a66396245c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x1300 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df[mulcols].hist(figsize=(15, 13),\n",
    "                          bins=15,\n",
    "                          layout=(2,2),\n",
    "                          color='lightblue',\n",
    "                          edgecolor='black',\n",
    "                          linewidth=1.0);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "e9720cdc-2a66-4252-85c9-915cd6c7ccd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Balance</th>\n",
       "      <th>EstimatedSalary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Age</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.016358</td>\n",
       "      <td>0.041119</td>\n",
       "      <td>-0.004997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CreditScore</th>\n",
       "      <td>-0.016358</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.006084</td>\n",
       "      <td>-0.000595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Balance</th>\n",
       "      <td>0.041119</td>\n",
       "      <td>0.006084</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.010545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>EstimatedSalary</th>\n",
       "      <td>-0.004997</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.010545</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      Age  CreditScore   Balance  EstimatedSalary\n",
       "Age              1.000000    -0.016358  0.041119        -0.004997\n",
       "CreditScore     -0.016358     1.000000  0.006084        -0.000595\n",
       "Balance          0.041119     0.006084  1.000000         0.010545\n",
       "EstimatedSalary -0.004997    -0.000595  0.010545         1.000000"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[mulcols].corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "bb966ba7-44fb-4e4c-9f1c-0b2885385ec2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(5, 4))\n",
    "\n",
    "sns.heatmap(df[mulcols].corr(),\n",
    "            annot=True,\n",
    "            annot_kws={'fontsize': 10},\n",
    "            cmap='Blues',\n",
    "            ax=ax)\n",
    "\n",
    "ax.tick_params(axis='x', rotation=45)\n",
    "ax.tick_params(axis='y', rotation=360);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "ddfc2e54-b730-4f89-a4a8-5a518019fdb5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_continuous(df, feature):\n",
    "    \n",
    "    df_func = df.copy()\n",
    "    df_func['Exited'] = df_func['Exited'].astype('category')\n",
    "\n",
    "    df_churned = df_func[df_func['Exited'] == 1]\n",
    "    df_retained = df_func[df_func['Exited'] == 0]\n",
    "\n",
    "    fig, (ax1, ax2) = plt.subplots(2,\n",
    "                                   figsize=(5, 4),\n",
    "                                   sharex=True,\n",
    "                                   gridspec_kw={'height_ratios': (.7, .3)})\n",
    "\n",
    "    colors = ['#1f77b4', '#ff7f0e']  \n",
    "\n",
    "    for sub_df, color, label in zip([df_retained, df_churned], colors, ['Retained', 'Churned']):\n",
    "        sns.histplot(data=sub_df,\n",
    "                     x=feature,\n",
    "                     bins=15,\n",
    "                     color=color,\n",
    "                     alpha=0.6,\n",
    "                     edgecolor='firebrick',\n",
    "                     label=label,\n",
    "                     kde=False,\n",
    "                     ax=ax1)\n",
    "    ax1.legend()\n",
    "\n",
    "    sns.boxplot(x=feature, y='Exited', data=df_func, palette=colors, ax=ax2)\n",
    "    ax2.set_ylabel('')\n",
    "    ax2.set_yticklabels(['Retained', 'Churned'])\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "f6ab62e8-920e-40bc-a1e5-781de542e08c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_continuous(df, 'Age')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "d377d6b6-cbf6-4019-9333-e0bdd52f094e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 500x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_continuous(df ,'CreditScore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "7ccf5b8a-767f-48ad-adf7-b181f782b6ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_continuous(df , 'Balance')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "33201d02-1234-4c53-9cb6-5e9af176aa6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_continuous(df , 'EstimatedSalary')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "aaaca178-caf2-42cc-bb9b-e3eb82e4166a",
   "metadata": {},
   "outputs": [],
   "source": [
    "font_size = 16\n",
    "plt.rcParams['axes.labelsize'] = font_size\n",
    "plt.rcParams['axes.titlesize'] = font_size + 2\n",
    "plt.rcParams['xtick.labelsize'] = font_size - 2\n",
    "plt.rcParams['ytick.labelsize'] = font_size - 2\n",
    "plt.rcParams['legend.fontsize'] = font_size - 2\n",
    "\n",
    "colors_cat = ['cyan','steelblue', 'seagreen', 'black', 'darkorange', 'purple', 'firebrick', 'slategrey', 'red', 'yellow', 'pink']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "16ef66d5-33aa-4fb6-a85c-7fce20b96237",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Geography',\n",
       " 'Gender',\n",
       " 'Tenure',\n",
       " 'NumOfProducts',\n",
       " 'HasCrCard',\n",
       " 'IsActiveMember']"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "b5d59f52-84c4-40bb-b2ec-3669c8456c94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_cat = df[categorical] \n",
    "fig, ax = plt.subplots(2, 3, figsize=(12, 8))\n",
    "\n",
    "for index, column in enumerate(df_cat.columns):\n",
    "\n",
    "    plt.subplot(2, 3, index + 1)\n",
    "    sns.countplot(x=column, data=df, palette=colors_cat)\n",
    "\n",
    "    plt.ylabel('Count')\n",
    "    if (column == 'HasCrCard' or column == 'IsActiveMember'):\n",
    "        plt.xticks([0, 1], ['No', 'Yes'])\n",
    "\n",
    "plt.tight_layout();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "40a5ac42-3b8b-47f0-8358-8d4aa3ddfbd4",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_categorical(feature):\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4))\n",
    "\n",
    "    sns.countplot(x=feature,\n",
    "                  hue='Exited',\n",
    "                  data=df,\n",
    "                  palette=colors,\n",
    "                  ax=ax1)\n",
    "    ax1.set_ylabel('Count')\n",
    "    ax1.legend(labels=['Retained', 'Churned'])\n",
    "\n",
    "    sns.barplot(x=feature,\n",
    "                y='Exited',\n",
    "                data=df,\n",
    "                palette=colors_cat,\n",
    "                ax=ax2)\n",
    "    ax2.set_ylabel('Churn rate')\n",
    "\n",
    "    if (feature == 'HasCrCard' or feature == 'IsActiveMember'):\n",
    "        ax1.set_xticklabels(['No', 'Yes'])\n",
    "        ax2.set_xticklabels(['No', 'Yes'])\n",
    "\n",
    "    plt.tight_layout();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "f3809dc3-0f30-44dd-a011-c59f8e1f74ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('Geography')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "fd140dc5-8cc4-4f89-a5f7-d8264909fea3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('Gender')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "ed1e37d9-5398-440e-8a55-144b967e8597",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('Tenure')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "042dfcd5-6eb5-4326-ae78-014e27d77c97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('NumOfProducts')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "7f68a293-2b3c-4aa8-ac6d-adc938cdf46c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('HasCrCard')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "542b9184-5098-4eee-8762-1744ae31d9f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABKUAAAGGCAYAAACqvTJ0AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjkuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8hTgPZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABvWUlEQVR4nO3de3zP9f//8ftrmw2zzTKnCcMmhwo5H2eUhUoKH4dPzqL66YNqcpjNkPj0oYOSKFIfJCSVU8XMMVKoOY0MOS9sjM0Or98fPnt/vdvBZtv7vcPterm8Lx/v5+t5eLzeens/P4/X8/V8GaZpmgIAAAAAAABsyMHeAQAAAAAAAKD4ISkFAAAAAAAAmyMpBQAAAAAAAJsjKQUAAAAAAACbIykFAAAAAAAAmyMpBQAAAAAAAJsjKQUAAAAAAACbIykFAAAAAAAAm3OydwCQUlNTdfbsWbm5uckwDHuHAwAAMmGapq5duyZvb285OHBtz9aYMwEAUDhkd85EUqoAOHv2rKpWrWrvMAAAQDadPn1a999/v73DKHaYMwEAULjcbc5EUqoAcHNzk3T7L8vd3d3O0QAAgMzExcWpatWqlt9u2BZzJgAACofszplIShUAacvP3d3dmWABAFAIcOuYfTBnAgCgcLnbnInNEAAAAAAAAGBzJKUAAAAAAABgcySlAAAAAAAAYHMkpQAAAAAAAGBzJKUAAAAAAABgcySlAAAAAAAAYHNO9g4AAIC7SUlJUVJSkr3DQBHk6OioEiVK2DsMAACAYomkFACgwDJNU+fPn1dsbKxM07R3OCiiXFxc5OXlJXd3d3uHAgAAUKyQlAIAFFixsbG6evWqypcvL1dXVxmGYe+QUISYpqmkpCTFxsbqzJkzkkRiCgAAwIZISgEACiTTNHXx4kW5u7vLy8vL3uGgiCpVqpTc3Nz0559/KiYmhqQUAACADbHROQCgQEpJSVFKSgpJAuQ7wzDk4eGhxMRE9i4DCgDTNHX9+nXLi9u3AaDoYqUUAKBASk5OliQ5OfFThfyXttl5SkoKG58DdhYfH69u3bpZ3n/99dcqU6aMHSMCAOQXZvoAUIh5jva0dwj5pqp7Vb3V6S3dLHlThlPB3kuqUdVG9g4BucR+ZQAAALbH7XsAAAAAAACwOZJSAAAgTxiGofbt29s7DIvw8HAZhqHQ0FB7hwIAAIAMkJQCAKCAio6OlmEYVq8SJUqoSpUq6tWrl37++edc9T9w4EAZhqHo6Oi8CRgAAADIgUK5p9TMmTM1duxYSdLOnTvVokWLdHXi4uIUGhqqlStX6vz586pUqZKeffZZhYaGZvokpyVLlujtt99WZGSknJ2d1bJlS4WFhalJkyYZ1o+KitKECRO0efNmXb9+XX5+fnr++ef14osvysGBfB8A5KcOszrYO4RMXZl9JU/7q1Wrlv75z39Kur0B8N69e/Xll19q9erV+uGHH9SuXbs8He9eHTp0SKVLl7Z3GAAAACgkCl1S6tChQ5o0aZJcXV0VHx+fYZ34+Hj5+/tr3759euyxx9SnTx/t379fs2fP1ubNm7Vt2za5urpatXnjjTc0YcIEVatWTSNGjND169e1bNkytW7dWhs2bEh3O8LBgwfVqlUr3bhxQ7169VKVKlW0bt06jRw5UgcOHNBHH32UXx8BAKCY8fX1TXcL2ptvvqlx48YpODhYW7ZssU9gf1OnTh17hwAAAIBCpFAt50lJSdGAAQPUoEEDde/ePdN6M2fO1L59+xQUFKSNGzfqzTff1Lp16zRp0iTt27dPM2fOtKofFRWlkJAQ1a5dWwcOHNB//vMfzZs3Tzt27JCTk5OGDh1qeTR5mhdeeEGxsbFavXq1Pv/8c82YMUN79+5Vx44dNX/+fG3evDlfPgMAACRpyJAhkqS9e/dald+6dUuzZs3SI488IldXV7m5ualt27Zas2aNVT0fHx99+umnkqQaNWpYbg+88yLMV199pT59+sjX11elS5eWh4eH2rZtq5UrV2YYU0Z7St15i+AHH3ygunXrqmTJkqpevbomT56s1NTUDPv6+uuv1bFjR3l6eqpkyZJ68MEH9dZbbyklJSVd3Zs3b+r1119X1apVLXXnz5+f5ecHAAAA+ytUSakZM2Zo//79+uSTT+To6JhhHdM0tWDBApUpU0aTJk2yOjZu3Dh5enrq448/lmmalvKFCxcqOTlZEyZMkIeHh6W8fv366t+/v44fP65NmzZZyo8ePaqIiAgFBASoS5culvISJUpo2rRpksRkGABgE05O/7foOTExUYGBgXrllVck3U5c/fOf/9TJkyfVrVs3zZkzx1J31KhRatCggSTpX//6l0JCQhQSEqKBAwda6owbN06RkZFq06aN/vWvf6lnz546cuSIevTooffeey9Hcb722msKCQlRixYtNHz4cElSaGiogoOD09UdP368nn76aR09elTPPvusXnzxRZUsWVKvvfaaevfubVU3NTVVTz31lGbMmCFPT0/961//UosWLTR69Gj95z//yVGMAAAAsK1Cc/ve77//rsmTJ2vixImqX79+pvWioqJ09uxZBQYGprtFr2TJkmrXrp2+/vprHTt2TH5+fpJuP51Hkjp16pSuv8DAQH344YfasmWL5XhW9Zs1a6ayZcsWmFspAABF07x58yRJbdq0sZSFhYUpPDxcoaGhmjRpkgzDkCRdu3ZNHTp00CuvvKJnnnlG3t7eGjVqlPbt26f9+/dr1KhR8vHxSTfG2rVrVbNmTauy69evq1WrVgoODtaQIUOyvYfU3r17deDAAVWuXFmSFBwcLD8/P7333nsKCQmRs7OzJOn777/X9OnT1blzZ61YscLSv2maevHFF/Xhhx9q5cqVevbZZyVJixcv1g8//KDHH39c3377reWi1b/+9a9M94QEAABAwVAoVkolJydr4MCBqlu3rl5//fUs60ZFRUmSJeH0d2nlafXS/lymTBlVqlQp2/UzG8MwDPn6+urs2bO6ceNGhjEkJiYqLi7O6gUAQGaOHTum0NBQhYaG6rXXXlP79u0VHBysChUq6N///rek2yuG5s6dK19fX6uElCS5ublp0qRJunXrllatWpXtcf+ekJKkMmXKaODAgYqNjdWePXuy3VdwcLAlISVJXl5e6tatm65du6YjR45YytNWc82bN88q4WUYht58800ZhqGlS5dayhcvXixJmjZtmtUq6oceekjPPfdctuMDAACA7RWKlVJvvPGG9u/fr59++kklSpTIsm5sbKwkWd2Gd6e0J++l1Uv7c4UKFXJUP7tjZHQFefr06Zo8eXKW5wEAQJrjx4+n+92oUKGCtm7dqtq1a0uSjhw5oitXrsjb2zvD35hLly5Jkg4fPpztcS9evGjZl/HkyZO6efOm1fGzZ89mu69HHnkkXdn9998vSbp69aqlbNeuXXJ1ddXHH3+cYT+lSpWyOof9+/erdOnSGfbftm3bTPsBAACA/RX4pNT+/fs1depUvfrqqxlOOAujcePGacyYMZb3cXFxqlq1qh0jAgAUZIGBgVq/fr2k28mlTz/9VGPHjtXTTz+t3bt3q0yZMrp8+bIkKTIyUpGRkZn2ldmT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6frrr7/0xhtvKCIiQn5+fpKkzz77TOHh4Tpz5ow+/PBDlShRQufOndP8+fPtHDEAAEDeyVVSavHixdqwYUO26m7cuFGLFy/OzXAAAABFysaNG1WmTBmNHj06w+NOTk56/vnntWzZMm3atEkzZsywcYQAAAD5J1dJqYEDB+qNN97IVt3p06dr0KBBuRkOAACgSDlz5oxq1KghFxcXSZKjo6MkKTEx0are448/Lh8fHy1ZssTmMQIAAOSXXN++Z5pmntYDAAAoLkqXLm21T5SHh4ek28mqvytbtqyio6NtFRoAAEC+s9meUufPn5erq6uthgMAACjwqlatqrNnz1re16tXT5L0ww8/WNWLiYnRkSNHLCuqAAAAioIcPcLl1KlT6a7QxcbGKiIiItM2N2/e1JYtW3T06FE1b978noIEAAAoitq0aaMPP/xQ58+fV6VKldSjRw/NmDFDr776qhwcHNSyZUtduHBBEydOVEJCgrp06WLvkAEAAPJMjpJSCxcuVFhYmFXZ77//roCAgCzbpd26N2rUqJxFBwAAUIR169ZN8+bN07fffquhQ4eqcePGeuGFFzR37lwNHz7cUs80Td13332aPn26HaMFAADIWzlKSvn4+Khdu3aW91u2bJG7u7saNmyYYX3DMFSqVCnVrFlT//jHP9SmTZtcBQsAAFCUPPbYY0pKSrIqe//999W8eXMtWbJE0dHRKlWqlNq0aaOgoCBVrVrVTpECAADkvRwlpQYMGKABAwZY3js4OOihhx7S5s2b8zwwAACA4qp///7q37+/vcMAAADIVzlKSv3d5s2bLU+JAQAAQM4MHjxYjo6Oev/99+Xs7GzvcAAAAGwqV0kpf3//vIoDAACg2Pn8889Vv359ElIAAKBYylVS6k6xsbH6448/dP36dcvG5hm5c08qAACA4qxKlSr2DgEAAMBucp2UioiI0Ouvv66ffvrprnUNw1BycnJuhwQAACgSunbtqo8++kjnzp1T5cqV7R0OAACATeV6T6nHH39cSUlJcnFxkY+PjypUqCAHB4e8ig8AAKDICg0N1bfffqtevXppxYoVqlixor1DAgAAsJlcJaVCQkKUlJSkfv366e2331a5cuXyKi4AAIAi74MPPtATTzyhefPmqUaNGnr00UdVt25dubq6ZljfMAwFBwfbOEoAAID8YZhZbQB1F2XKlJGz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ffepdevWCgoKUvPmzdO1iYuLU2hoqFauXKnz58+rUqVKevbZZxUaGip3d/cMx1myZInefvttRUZGytnZWS1btlRYWJiaNGmSYf2oqChNmDBBmzdv1vXr1+Xn56fnn39eL774ohwc8nWrLgAAUET0799fhmHYOwwAAAC7KPBJqffee08zZsxQrVq19Nhjj6lChQqKiorS6tWrtXr1ai1dulS9evWy1I+Pj5e/v7/27dunxx57TH369NH+/fs1e/Zsbd68Wdu2bUu3JP6NN97QhAkTVK1aNY0YMULXr1/XsmXL1Lp1a23YsEHt27e3qn/w4EG1atVKN27cUK9evVSlShWtW7dOI0eO1IEDB/TRRx/Z4qMBAACF3KJFi+wdAgAAgN3kSVIqMTFRS5cu1caNG3X06FFdu3ZNbm5uql27tgIDA9W7d2+5uLjcU9/NmjVTRESE2rZta1W+detWdezYUS+88IK6detm6X/mzJnat2+fgoKCNGPGDEv9kJAQhYWFaebMmZo8ebKlPCoqSiEhIapdu7Z2794tDw8PSdLLL7+sZs2aaejQoTp8+LCcnP7vo3rhhRcUGxur7777Tl26dJEkTZ06VZ07d9b8+fPVp08fBQQE3NP5AgCA4mPw4MFycnLSnDlz5OzsbO9wAAAAbCrX95n98ssvqlevnoYMGaJly5bpl19+UVRUlH755RctW7ZMgwcPVv369fXLL7/cU//PPPNMuoSUJLVt21YBAQG6fPmyfvvtN0m3N15fsGCBypQpo0mTJlnVHzdunDw9PfXxxx9bbdC+cOFCJScna8KECZaElCTVr19f/fv31/Hjx7Vp0yZL+dGjRxUREaGAgABLQkqSSpQooWnTpkmS5s+ff0/nCgAAipfPP/9ce/bsISEFAACKpVwlpf7880899thjOnHihMqVK6dx48bp888/1/fff6/PP/9c48aNk5eXl/744w8FBgbqzJkzeRW3pNuJIEmWVUxRUVE6e/asWrdune4WvZIlS6pdu3Y6c+aMjh07ZikPDw+XJHXq1Cld/4GBgZKkLVu2ZKt+s2bNVLZsWav6AAAAmalSpYq9QwAAALCbXN2+N336dF25ckXPPPOMPvvsM5UqVSpdneDgYD333HNauXKlpk+frjlz5uRmSItTp07phx9+UKVKlfTQQw9Jup2UkiQ/P78M26SVR0VFWf25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SpYsqdDQUP355586dOiQ5s2bpyeffFJ//fWXXnvtNc2aNcuq/uLFiyVJFy9elJOTk9Ujhw3D0Pjx4yXdvmoVFRVlaefm5iZJunr1qm1OTOmXot+8eVNff/21DMNQ7969reqWKVNGktS6dWuZt/fgy/SV9hjlrDz33HOW/71165blfVbSYpgwYcJdY1i0aFF2P4Zcu3TpUoblpmlajqX9/aadQ5UqVe56DplN5gAAKKiYN93GvClzzJuAzJGUApClOnXq6Pnnn9eaNWv0wQcfSJLmz59vOX7p0iVt2LBB0u2rQBUrVszwlbZfwueff25pW79+fUm3J13ZlXYl6l716dNHhmFo9erVunnzpr755htdu3ZNbdq0sewLkaZevXqSbi+XT01NzdW40u09IMqUKaNTp07JMAzLvhFZSYvh999/z/X4eSntFoK/O3HihBITE+Xg4GBZ4u7n56cSJUro3Llzunz5si3DBADAppg3MW/KCPMmIHMkpQBkW9oeBmfPnrWULV26VMnJyfLx8dH58+czfb399tuSrCdXaRtJrl69WsePH89WDGmTtLst+85MtWrV1Lp1a12/fl3ffPON5cpf2pXAO/n5+enBBx/U5cuXLVc1c6N06dJ65ZVX1LFjRw0fPlzVq1e/a5uuXbvK2dlZa9eutbpaam8rV6607Mlwp7QJeOvWrS1Lx0uXLq3AwEClpqbq3XfftWmcAADYC/Om3GHexLwJxQNJKQBWfvzxR7322ms6ePCgVfn169f173//W5L0yCOPWMrv3Hgyq6txvXr1kouLi/744w/L/fGNGzdW9+7dlZCQoM6dO2vPnj1WbY4dO6a33nrLqqxmzZqSpIiIiHtespy2B8KHH36odevWycnJST179syw7owZM2QYhl566SUtWLBAycnJVsf/+OMPTZs2TatWrcrW2KGhofrhhx80d+7cbNX39vbWqFGjlJSUpMDAQIWHh1sdN01Tu3fv1gsvvJDpE1/yQ0pKivr166eYmBhL2VdffaX33ntPkvTaa69Z1Z8yZYpcXFw0depUvfnmm+kmx+fOndM777yjDz/8MP+DBwAgjzBvssa8KWPMm4AsmACKterVq5uSzIULF5qmaZpfffWVKcmUZJYvX95s0qSJ2aBBA7N06dKmJNPDw8Pcu3evaZqmeejQIUvdw4cP33Ws7t27m5LM4cOHW8ouX75stmzZ0tKPj4+P2aRJE7NixYqmJLN69epWfRw7dsx0dna2HGvbtq3p7+9vif/Oczpx4kSGcVy6dMl0cnKyjNm5c+cs454zZ47p6OhoSjLd3NzMxo0bW8UoyZw7d26Gn+vWrVvv+rmYpmmePn3a0tffJSUlmf/85z8txytVqmQ2a9bMbNCggenm5mYpP3TokKXN5s2bTUmmv79/huMtXLjQlGQOGDAgw+MhISGmJDMkJMSqfMCAAaYkc9y4caaHh4dZsmRJs3HjxqaPj48ljhdffDHDPletWmX576hkyZJmw4YNzWbNmplVq1a1tB07dqxVm7v9XQIAYEvMm5g3ZYR5E3DvWCkFwErbtm317rvv6sknn1SZMmV08OBBRUdHy9fXV0FBQTp8+LDlil/a1b6mTZvqgQceuGvfaY/xXb58uW7duiVJ8vT01JYtW/T++++rdevWunLlin7//XeVLl1aPXr00Jw5c6z6qFWrlr755hv5+/vrypUr2rZtm7Zs2ZKtDTPTeHl5qVOnTpb3f396zN+99NJL2rdvn4YOHary5csrMjJSUVFR8vLyUp8+ffTll1+qf//+2R4/p5ycnPTZZ5/pu+++syzd//XXX3Xu3DnVrl1b/+///T+Fh4erdu3a+RbD39WuXVu7d+/Wk08+qVOnTuncuXNq0KCBPvroo3R/Z2m6d++ugwcP6l//+pd8fHx05MgRHTx4UKVLl1b37t316aef6vXXX7fZOQAAkFvMm9Jj3pQe8yYgc4ZpsmU/AAAAAAAAbIuVUgAAAAAAALA5klIAAAAAAACwOZJSAAAAAAAAsDmSUgAAAAAAALA5klIAAAAAAACwOZJSAAAAAAAAsDmSUgAAAAAAALA5klIAAAAAAACwOZJSAAAAAAAAsDmSUgAAAAAAALA5klIAAAAAAACwOZJSAAAAAAAAsDmSUgAAAAAAALA5klIAAAAAAACwuf8P1tUFs6vEx1EAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1200x400 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_categorical('IsActiveMember')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "3790ac71-90fb-48c4-961c-26ac2b944b93",
   "metadata": {},
   "outputs": [],
   "source": [
    "features_drop = ['Tenure', 'HasCrCard', 'EstimatedSalary']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "be583bd9-5c5b-4d2b-9e0a-a12d3463c4c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df.drop(features_drop, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "0f0c0b5a-1118-4688-bd3d-3defe7726c97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>IsActiveMember</th>\n",
       "      <th>Exited</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>619.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>608.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>41</td>\n",
       "      <td>83807.86</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>502.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>42</td>\n",
       "      <td>159660.80</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>699.0</td>\n",
       "      <td>France</td>\n",
       "      <td>Female</td>\n",
       "      <td>39</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>850.0</td>\n",
       "      <td>Spain</td>\n",
       "      <td>Female</td>\n",
       "      <td>43</td>\n",
       "      <td>125510.82</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CreditScore Geography  Gender  Age    Balance  NumOfProducts  \\\n",
       "0        619.0    France  Female   42       0.00              1   \n",
       "1        608.0     Spain  Female   41   83807.86              1   \n",
       "2        502.0    France  Female   42  159660.80              3   \n",
       "3        699.0    France  Female   39       0.00              2   \n",
       "4        850.0     Spain  Female   43  125510.82              1   \n",
       "\n",
       "   IsActiveMember  Exited  \n",
       "0               1     1.0  \n",
       "1               1     0.0  \n",
       "2               0     1.0  \n",
       "3               0     0.0  \n",
       "4               1     0.0  "
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "092decff-6d30-415f-bdf0-2fdf3a0a538c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(df.drop(columns=['Exited']), df['Exited'],\n",
    "                                                    test_size=0.2, random_state=43, stratify=df['Exited'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "e918a74f-974f-43e6-9477-ea1733ed83c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((7711, 7), (7711,), (1928, 7), (1928,))"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.shape, y_train.shape, X_test.shape, y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "7d13e033-5605-415c-b255-473f405327c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Exited\n",
       "0.0    1535\n",
       "1.0     393\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "376f3588-1fd5-4908-8600-eaa91b658d2f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Male      5264\n",
       "Female    4375\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "126818e6-e1ae-49eb-a333-3c83c75039ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "le = LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "b1ba8eff-c472-40f5-a2ad-266383296716",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "Male      4192\n",
       "Female    3519\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "bdff025e-b833-4120-9d66-8c4dbde746d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train['Gender'] = le.fit_transform(X_train['Gender'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "43f83948-8728-44b8-9b2b-234cd15b0c87",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test['Gender'] = le.transform(X_test['Gender'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "dd7ae1b9-8ab4-4419-b711-986fda0cec13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender\n",
       "1    4192\n",
       "0    3519\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['Gender'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "74019e5f-88c5-47b4-9bf6-637c315d0d0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def geography_conversion(df):\n",
    "    df['Geography'] = df['Geography'].map({\n",
    "    'Germany': 1,\n",
    "    'Spain': 0,\n",
    "    'France': 0\n",
    "    })\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "39e0eb5b-c8a9-4f14-adc5-a9fdfe2321c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = geography_conversion(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "19f98e7e-74d8-4d5f-95d1-baa7abc5813b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Geography\n",
       "0    5731\n",
       "1    1980\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['Geography'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "605b7621-defe-43b7-a53b-5c05dcbdfd80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Geography\n",
       "France     958\n",
       "Spain      525\n",
       "Germany    445\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test['Geography'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "843c52a3-4a8e-476d-8ec3-36f0953381b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test = geography_conversion(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "abf52c93-686c-4745-88ca-cfd6178d334d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Geography\n",
       "0    1483\n",
       "1     445\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test['Geography'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "63638de1-4831-49a2-b22a-291c83bcc6a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "\n",
    "scl_columns = ['CreditScore', 'Age', 'Balance']\n",
    "X_train[scl_columns] = scaler.fit_transform(X_train[scl_columns])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "05600308-f733-49c1-89b6-61889db9e2ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test[scl_columns] = scaler.transform(X_test[scl_columns])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "b86e6362-4fc7-4758-b0f5-dfb5edd3ddf2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CreditScore</th>\n",
       "      <th>Geography</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Age</th>\n",
       "      <th>Balance</th>\n",
       "      <th>NumOfProducts</th>\n",
       "      <th>IsActiveMember</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "      <td>1928.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.003000</td>\n",
       "      <td>0.230809</td>\n",
       "      <td>0.556017</td>\n",
       "      <td>-0.011723</td>\n",
       "      <td>-0.042789</td>\n",
       "      <td>1.519191</td>\n",
       "      <td>0.507780</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.972756</td>\n",
       "      <td>0.421460</td>\n",
       "      <td>0.496981</td>\n",
       "      <td>0.999014</td>\n",
       "      <td>1.011009</td>\n",
       "      <td>0.588459</td>\n",
       "      <td>0.500069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-2.853173</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.251227</td>\n",
       "      <td>-1.238418</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.651820</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-0.689125</td>\n",
       "      <td>-1.238418</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-0.003758</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.092686</td>\n",
       "      <td>0.293155</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.675164</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.588958</td>\n",
       "      <td>0.810068</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.053582</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.747498</td>\n",
       "      <td>2.331794</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       CreditScore    Geography       Gender          Age      Balance  \\\n",
       "count  1928.000000  1928.000000  1928.000000  1928.000000  1928.000000   \n",
       "mean     -0.003000     0.230809     0.556017    -0.011723    -0.042789   \n",
       "std       0.972756     0.421460     0.496981     0.999014     1.011009   \n",
       "min      -2.853173     0.000000     0.000000    -2.251227    -1.238418   \n",
       "25%      -0.651820     0.000000     0.000000    -0.689125    -1.238418   \n",
       "50%      -0.003758     0.000000     1.000000    -0.092686     0.293155   \n",
       "75%       0.675164     0.000000     1.000000     0.588958     0.810068   \n",
       "max       2.053582     1.000000     1.000000     2.747498     2.331794   \n",
       "\n",
       "       NumOfProducts  IsActiveMember  \n",
       "count    1928.000000     1928.000000  \n",
       "mean        1.519191        0.507780  \n",
       "std         0.588459        0.500069  \n",
       "min         1.000000        0.000000  \n",
       "25%         1.000000        0.000000  \n",
       "50%         1.000000        1.000000  \n",
       "75%         2.000000        1.000000  \n",
       "max         4.000000        1.000000  "
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "6a46bc42-137b-4d06-ab94-a9b3ab9fce63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Exited\n",
       "1.0    6140\n",
       "0.0    6140\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "over = SMOTE(sampling_strategy='auto', random_state=42)\n",
    "X_train, y_train = over.fit_resample(X_train, y_train)\n",
    "\n",
    "y_train.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c2713183-ab45-49fe-9730-e456abd435be",
   "metadata": {},
   "source": [
    "### choosing the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "ffd97838-49a1-47dd-b91e-fea7446d1b81",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score, GridSearchCV\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "8764daa9-c2fb-40d0-b01b-0630a35e4789",
   "metadata": {},
   "outputs": [],
   "source": [
    "scoring_metric = 'accuracy'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "adc5ea57-7695-41ba-b9ea-671448a6a8b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Baseline Models (Recall):\n",
      "   Logistic Regression: 0.72\n"
     ]
    }
   ],
   "source": [
    "clf_list = [('Logistic Regression', LogisticRegression(random_state=43))]\n",
    "\n",
    "cv_base_mean, cv_std = [], []\n",
    "\n",
    "for clf in clf_list:\n",
    "    cv = cross_val_score(estimator=clf[1],\n",
    "                         X=X_train,\n",
    "                         y=y_train,\n",
    "                         scoring=scoring_metric,\n",
    "                         cv=5,\n",
    "                         n_jobs=-1)\n",
    "\n",
    "    cv_base_mean.append(cv.mean())\n",
    "    cv_std.append(cv.std())\n",
    "\n",
    "print('Baseline Models (Recall):')\n",
    "\n",
    "for i in range(len(clf_list)):\n",
    "    print('   {}: {}'.format(clf_list[i][0], np.round(cv_base_mean[i], 2)))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "4eb949e4-2ce2-4dbc-b20b-dd316e8ce363",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf_list = [\n",
    "    ('Logistic Regression', LogisticRegression(random_state=43)),\n",
    "    ('Decision Tree', DecisionTreeClassifier(random_state=43)),\n",
    "    ('Random Forest', RandomForestClassifier(random_state=43))\n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "95bbb990-cba7-40f6-a925-be1ef0f53266",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score, cross_val_predict\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import accuracy_score, recall_score, precision_score, auc, roc_auc_score, roc_curve\n",
    "from sklearn.metrics import classification_report, roc_auc_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "96c431e3-18af-456a-b914-573ce231e35b",
   "metadata": {},
   "outputs": [],
   "source": [
    "lr = LogisticRegression(random_state=43)\n",
    "\n",
    "param_grid = {\n",
    "    'max_iter': [100],\n",
    "    'penalty': ['l1', 'l2'],\n",
    "    'C': [0.0001, 0.001, 0.01, 0.1, 1, 10],\n",
    "    'solver': ['lbfgs', 'liblinear']\n",
    "}\n",
    "\n",
    "lr_clf = GridSearchCV(estimator=lr,\n",
    "                      param_grid=param_grid,\n",
    "                      scoring=scoring_metric,\n",
    "                      cv=5,\n",
    "                      verbose=False,\n",
    "                      n_jobs=-1)\n",
    "\n",
    "best_lr_clf = lr_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "bfeef038-4d94-48f3-9cff-51f84fb7ea80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=0.01, random_state=43, solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=0.01, random_state=43, solver=&#x27;liblinear&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(C=0.01, random_state=43, solver='liblinear')"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_lr_clf.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "81c71c43-6317-4dfa-97ca-f8caebf2e076",
   "metadata": {},
   "outputs": [],
   "source": [
    "lr_best = LogisticRegression(C=0.001, penalty='l1', random_state=43, solver='liblinear')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "23856aa5-ed36-4f04-821b-aa51b511440f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=0.001, penalty=&#x27;l1&#x27;, random_state=43, solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=0.001, penalty=&#x27;l1&#x27;, random_state=43, solver=&#x27;liblinear&#x27;)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression(C=0.001, penalty='l1', random_state=43, solver='liblinear')"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr_best.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "66f461c9-099b-4adb-939d-62fc2066ebe3",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_lr_pred = lr_best.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "6a2b00e2-7a72-4f25-9c61-29b8c9495bc1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.71      0.60      0.65      6140\n",
      "         1.0       0.65      0.76      0.70      6140\n",
      "\n",
      "    accuracy                           0.68     12280\n",
      "   macro avg       0.68      0.68      0.68     12280\n",
      "weighted avg       0.68      0.68      0.68     12280\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_train, y_train_lr_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "00d484a7-8737-4b90-9161-5268ecd1297d",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test_lr_pred = lr_best.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "f894edd3-8cc0-46da-8847-afcd340d8fff",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.92      0.61      0.73      1535\n",
      "         1.0       0.34      0.79      0.48       393\n",
      "\n",
      "    accuracy                           0.65      1928\n",
      "   macro avg       0.63      0.70      0.61      1928\n",
      "weighted avg       0.80      0.65      0.68      1928\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_test_lr_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "5432dccd-3def-47b8-ba8d-b9e4e3cb9927",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: xgboost in /opt/anaconda3/lib/python3.12/site-packages (3.0.1)\n",
      "Requirement already satisfied: lightgbm in /opt/anaconda3/lib/python3.12/site-packages (4.6.0)\n",
      "Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.26.4)\n",
      "Requirement already satisfied: scipy in /opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.13.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install xgboost lightgbm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "38dae5f2-35ff-4e2b-81a9-541126c35dde",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: xgboost in /opt/anaconda3/lib/python3.12/site-packages (3.0.1)\n",
      "Requirement already satisfied: numpy in /opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.26.4)\n",
      "Requirement already satisfied: scipy in /opt/anaconda3/lib/python3.12/site-packages (from xgboost) (1.13.1)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n",
    "from xgboost import XGBClassifier\n",
    "from lightgbm import LGBMClassifier\n",
    "!pip install xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "id": "54a89c39-49f2-4200-8a3e-7a3777c994e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find the best parameter using GridSearchCV\n",
    "rf = RandomForestClassifier()\n",
    "param_grid = {\n",
    "    'n_estimators': [100, 150],\n",
    "    'criterion': ['entropy', 'gini'],\n",
    "    'bootstrap': [True, False],\n",
    "    'max_depth': [4,5,6],\n",
    "    'max_features': ['auto', 'sqrt'],\n",
    "    'min_samples_leaf': [2, 3, 5],\n",
    "    'min_samples_split': [2, 3, 5]\n",
    "}\n",
    "\n",
    "rf_clf = GridSearchCV(estimator=rf,\n",
    "                      param_grid=param_grid,\n",
    "                      scoring='f1',\n",
    "                      cv=5,\n",
    "                      verbose=False,\n",
    "                      n_jobs=-1)\n",
    "\n",
    "best_rf_clf = rf_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "c9dbcc94-39ce-4b39-aa36-9f8aba24dd08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=5,\n",
       "                       min_samples_split=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=5,\n",
       "                       min_samples_split=5)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=5,\n",
       "                       min_samples_split=5)"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_rf_clf.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "4a651125-0b7d-4710-abd3-2f814346d103",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'bootstrap': False,\n",
       " 'criterion': 'gini',\n",
       " 'max_depth': 6,\n",
       " 'max_features': 'sqrt',\n",
       " 'min_samples_leaf': 5,\n",
       " 'min_samples_split': 5,\n",
       " 'n_estimators': 100}"
      ]
     },
     "execution_count": 281,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_rf_clf.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "id": "5b8c635e-1601-47c3-a813-80af7a13df6a",
   "metadata": {},
   "outputs": [],
   "source": [
    "rfc = RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=2,\n",
    "                       min_samples_split=3, n_estimators=150)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "id": "855f34da-73f1-41c1-bcd8-4fd3e6ed279e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=2,\n",
       "                       min_samples_split=3, n_estimators=150)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=2,\n",
       "                       min_samples_split=3, n_estimators=150)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(bootstrap=False, max_depth=6, min_samples_leaf=2,\n",
       "                       min_samples_split=3, n_estimators=150)"
      ]
     },
     "execution_count": 283,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rfc.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "22092cbd-2b49-4833-8dcd-4897c30c5f98",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_pred_rf = rfc.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "id": "ed7c1cdf-8216-46d4-8a6a-56a993c93c6b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.79      0.82      0.80      6140\n",
      "         1.0       0.81      0.79      0.80      6140\n",
      "\n",
      "    accuracy                           0.80     12280\n",
      "   macro avg       0.80      0.80      0.80     12280\n",
      "weighted avg       0.80      0.80      0.80     12280\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_train, y_train_pred_rf))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "id": "98fc71cb-13e1-45ff-91fc-8ae3e620f80d",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test_pred_rf = rfc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "a0c9a345-4966-4c69-ad38-faedaf8b0f74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.93      0.83      0.87      1535\n",
      "         1.0       0.53      0.75      0.62       393\n",
      "\n",
      "    accuracy                           0.81      1928\n",
      "   macro avg       0.73      0.79      0.75      1928\n",
      "weighted avg       0.85      0.81      0.82      1928\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_test_pred_rf))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "id": "89880c77-f431-4a4f-b165-b34eb79602a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "gbc = GradientBoostingClassifier()\n",
    "param_grid = {\n",
    "    'n_estimators': [600],\n",
    "    'subsample': [0.66, 0.75],\n",
    "    'learning_rate': [0.001, 0.01],\n",
    "    'max_depth': [3,4,5], \n",
    "    'min_samples_split': [5, 7, 10],\n",
    "    'min_samples_leaf': [3, 5, 7],\n",
    "    'max_features': ['auto', 'log2', None],\n",
    "    'n_iter_no_change': [20],\n",
    "    'validation_fraction': [0.2],\n",
    "    'tol': [0.01]\n",
    "}\n",
    "\n",
    "gbc_clf = GridSearchCV(estimator=gbc,\n",
    "                       param_grid=param_grid,\n",
    "                       scoring='f1',\n",
    "                       cv=5,\n",
    "                       verbose=False,\n",
    "                       n_jobs=-1)\n",
    "\n",
    "best_gbc_clf = gbc_clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "id": "b14764a4-daa9-4fa2-a8b4-0f18a468a87d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'learning_rate': 0.01,\n",
       " 'max_depth': 5,\n",
       " 'max_features': None,\n",
       " 'min_samples_leaf': 3,\n",
       " 'min_samples_split': 7,\n",
       " 'n_estimators': 600,\n",
       " 'n_iter_no_change': 20,\n",
       " 'subsample': 0.66,\n",
       " 'tol': 0.01,\n",
       " 'validation_fraction': 0.2}"
      ]
     },
     "execution_count": 298,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_gbc_clf.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "8b9e837f-9522-4cba-9ff9-4efa7b251df5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-5 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-5 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-5 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-5 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-5 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=3,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.66, tol=0.01,\n",
       "                           validation_fraction=0.2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GradientBoostingClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html\">?<span>Documentation for GradientBoostingClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=3,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.66, tol=0.01,\n",
       "                           validation_fraction=0.2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=3,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.66, tol=0.01,\n",
       "                           validation_fraction=0.2)"
      ]
     },
     "execution_count": 299,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_gbc_clf.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "1c15fdf0-121b-4ef5-9dfe-f146cb0d0ea0",
   "metadata": {},
   "outputs": [],
   "source": [
    "gbc = GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=7,\n",
    "                           min_samples_split=7, n_estimators=600,\n",
    "                           n_iter_no_change=20, subsample=0.75, tol=0.01,\n",
    "                           validation_fraction=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 306,
   "id": "305ad856-2a89-4bfb-9a81-bd76ea3b9b60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-7 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-7 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-7 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-7 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-7 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-7 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-7 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-7 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-7 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=7,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.75, tol=0.01,\n",
       "                           validation_fraction=0.2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GradientBoostingClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html\">?<span>Documentation for GradientBoostingClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=7,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.75, tol=0.01,\n",
       "                           validation_fraction=0.2)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "GradientBoostingClassifier(learning_rate=0.01, max_depth=5, min_samples_leaf=7,\n",
       "                           min_samples_split=7, n_estimators=600,\n",
       "                           n_iter_no_change=20, subsample=0.75, tol=0.01,\n",
       "                           validation_fraction=0.2)"
      ]
     },
     "execution_count": 306,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gbc.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "id": "e7a7b4b1-b21e-4062-857a-8e57fc4415ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_pred_gbc = gbc.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "id": "998de68c-3190-4d74-a149-5ec098695ff8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.83      0.83      0.83      6140\n",
      "         1.0       0.83      0.83      0.83      6140\n",
      "\n",
      "    accuracy                           0.83     12280\n",
      "   macro avg       0.83      0.83      0.83     12280\n",
      "weighted avg       0.83      0.83      0.83     12280\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_train, y_train_pred_gbc))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "id": "efeaa57e-6f2c-4f85-a5e3-e0b49222b275",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_test_pred_gbc = gbc.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 310,
   "id": "a64df8ab-ce9f-4cab-a8e5-8e7361341a71",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "         0.0       0.92      0.84      0.88      1535\n",
      "         1.0       0.54      0.73      0.62       393\n",
      "\n",
      "    accuracy                           0.82      1928\n",
      "   macro avg       0.73      0.79      0.75      1928\n",
      "weighted avg       0.85      0.82      0.83      1928\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, y_test_pred_gbc))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c5d365f3-5e73-4fc7-a364-700a8bdcf619",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
